{"ast":null,"code":"import { Actions } from '@ngrx/effects';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../quiz-redux.service\";\nexport class QuizAppEffects {\n  constructor(actions$, triviaService // Inject your trivia service\n  ) {\n    this.actions$ = actions$;\n    this.triviaService = triviaService;\n  }\n  static #_ = this.ɵfac = function QuizAppEffects_Factory(t) {\n    return new (t || QuizAppEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.QuizReduxService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizAppEffects,\n    factory: QuizAppEffects.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuBA,OAAO,QAAgB,eAAe;AAI7D,SAASC,gBAAgB,QAAQ,uBAAuB;;;;AAGxD,OAAM,MAAOC,cAAc;EACzBC,YACUC,QAAiB,EACjBC,aAA+B,CAAC;EAAA;IADhC,aAAQ,GAARD,QAAQ;IACR,kBAAa,GAAbC,aAAa;EACpB;EAAC;qBAJOH,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAI,SAAdJ,cAAc;EAAA","names":["Actions","QuizReduxService","QuizAppEffects","constructor","actions$","triviaService","factory"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.effects.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of, map } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport * as QuizAppFeature from './quiz-app.reducer';\nimport { QuizReduxService } from '../quiz-redux.service';\n\n@Injectable()\nexport class QuizAppEffects {\n  constructor(\n    private actions$: Actions,\n    private triviaService: QuizReduxService // Inject your trivia service\n  ) {}\n  // init$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(QuizAppActions.loadQuestions),\n  //     switchMap(() =>\n  //       this.triviaService.getTriviaQuestion().pipe(\n  //         map((questions) =>\n  //           QuizAppActions.loadQuestionsSuccess({ questions })\n  //         ),\n  //         catchError((error) => {\n  //           console.error('Error', error);\n  //           return of(QuizAppActions.loadQuestionsFailure({ error }));\n  //         })\n  //       )\n  //     )\n  //   )\n  // );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}