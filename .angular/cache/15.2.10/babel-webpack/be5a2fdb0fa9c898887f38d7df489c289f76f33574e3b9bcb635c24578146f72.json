{"ast":null,"code":"import { inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport * as i0 from \"@angular/core\";\nexport class QuizAppEffects {\n  constructor() {\n    this.actions$ = inject(Actions);\n    this.init$ = createEffect(() => this.actions$.pipe(ofType(QuizAppActions.initQuizApp), switchMap(() => of(QuizAppActions.loadQuizAppSuccess({\n      quizApp: []\n    }))), catchError(error => {\n      console.error('Error', error);\n      return of(QuizAppActions.loadQuizAppFailure({\n        error\n      }));\n    })));\n  }\n  static #_ = this.ɵfac = function QuizAppEffects_Factory(t) {\n    return new (t || QuizAppEffects)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizAppEffects,\n    factory: QuizAppEffects.ɵfac\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,YAAY,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,SAAS,EAAEC,UAAU,EAAEC,EAAE,QAAQ,MAAM;AAChD,OAAO,KAAKC,cAAc,MAAM,oBAAoB;;AAIpD,OAAM,MAAOC,cAAc;EAD3BC;IAEU,aAAQ,GAAGT,MAAM,CAACE,OAAO,CAAC;IAElC,UAAK,GAAGD,YAAY,CAAC,MACnB,IAAI,CAACS,QAAQ,CAACC,IAAI,CAChBR,MAAM,CAACI,cAAc,CAACK,WAAW,CAAC,EAClCR,SAAS,CAAC,MAAME,EAAE,CAACC,cAAc,CAACM,kBAAkB,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAE,CAAC,CAAC,CAAC,EACvET,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B,OAAOT,EAAE,CAACC,cAAc,CAACU,kBAAkB,CAAC;QAAEF;MAAK,CAAE,CAAC,CAAC;IACzD,CAAC,CAAC,CACH,CACF;;EACF;qBAbYP,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAU,SAAdV,cAAc;EAAA","names":["inject","createEffect","Actions","ofType","switchMap","catchError","of","QuizAppActions","QuizAppEffects","constructor","actions$","pipe","initQuizApp","loadQuizAppSuccess","quizApp","error","console","loadQuizAppFailure","factory"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.effects.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport * as QuizAppFeature from './quiz-app.reducer';\n\n@Injectable()\nexport class QuizAppEffects {\n  private actions$ = inject(Actions);\n\n  init$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(QuizAppActions.initQuizApp),\n      switchMap(() => of(QuizAppActions.loadQuizAppSuccess({ quizApp: [] }))),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(QuizAppActions.loadQuizAppFailure({ error }));\n      })\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}