{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Question } from './quiz/quiz.interface';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizReduxService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://the-trivia-api.com/v2/questions';\n  }\n  mapApiResponseToQuestion(apiResponse) {\n    return {\n      question: apiResponse.question.text,\n      options: apiResponse.incorrectAnswers.concat(apiResponse.correctAnswer),\n      correctAnswer: apiResponse.correctAnswer\n    };\n  }\n  getTriviaQuestion() {\n    return this.http.get(this.apiUrl).pipe(tap(apiResponse => console.log('API Response:', apiResponse)), map(apiResponse => this.mapApiResponseToQuestion(apiResponse)), catchError(error => {\n      console.error('Error fetching trivia question:', error);\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function QuizReduxService_Factory(t) {\n    return new (t || QuizReduxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizReduxService,\n    factory: QuizReduxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;AACzD,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAc,uBAAuB;;;AAKtD,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,yCAAyC;EAEnB;EAE/BC,wBAAwB,CAACC,WAAgB;IAC/C,OAAO;MACLC,QAAQ,EAAED,WAAW,CAACC,QAAQ,CAACC,IAAI;MACnCC,OAAO,EAAEH,WAAW,CAACI,gBAAgB,CAACC,MAAM,CAACL,WAAW,CAACM,aAAa,CAAC;MACvEA,aAAa,EAAEN,WAAW,CAACM;KAC5B;EACH;EAEAC,iBAAiB;IACf,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CACzChB,GAAG,CAAEM,WAAW,IAAKW,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEZ,WAAW,CAAC,CAAC,EAC/DP,GAAG,CAAEO,WAAW,IAAK,IAAI,CAACD,wBAAwB,CAACC,WAAW,CAAC,CAAC,EAChET,UAAU,CAAEsB,KAAK,IAAI;MACnBF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAOrB,UAAU,CAACqB,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAAC;qBAtBUjB,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAkB,SAAhBlB,gBAAgB;IAAAmB,YAFf;EAAM","names":["HttpClient","catchError","throwError","map","tap","Question","QuizReduxService","constructor","http","mapApiResponseToQuestion","apiResponse","question","text","options","incorrectAnswers","concat","correctAnswer","getTriviaQuestion","get","apiUrl","pipe","console","log","error","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz-redux.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Question, Quiz } from './quiz/quiz.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizReduxService {\n  private apiUrl = 'https://the-trivia-api.com/v2/questions';\n\n  constructor(private http: HttpClient) {}\n\n  private mapApiResponseToQuestion(apiResponse: any): Question {\n    return {\n      question: apiResponse.question.text,\n      options: apiResponse.incorrectAnswers.concat(apiResponse.correctAnswer),\n      correctAnswer: apiResponse.correctAnswer,\n    };\n  }\n\n  getTriviaQuestion(): Observable<Question> {\n    return this.http.get<any>(this.apiUrl).pipe(\n      tap((apiResponse) => console.log('API Response:', apiResponse)),\n      map((apiResponse) => this.mapApiResponseToQuestion(apiResponse)),\n      catchError((error) => {\n        console.error('Error fetching trivia question:', error);\n        return throwError(error);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}