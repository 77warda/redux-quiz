{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { QuizActions } from '../+state/quiz-app.actions';\nimport { Store } from '@ngrx/store';\nimport { selectCategories } from '../+state/quiz-app.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nfunction UserLoginComponent_ng_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const categoryKey_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoryKey_r1.key);\n  }\n}\nexport class UserLoginComponent {\n  constructor(store, fb, router) {\n    this.store = store;\n    this.fb = fb;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.store.dispatch(QuizActions.loadCategories());\n    // this.totalQuestions$ = this.store.select(selectTotalQuestions);\n    this.categories$ = this.store.select(selectCategories);\n    // this.store.dispatch(QuizActions.loadCategories());\n    this.quizLoginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      numberOfQuestions: [0, [Validators.required, Validators.min(1)]],\n      difficulty: ['', [Validators.required]],\n      category: ['', [Validators.required]]\n    });\n  }\n  onSubmit(formValue) {\n    // const selectedNumberOfQuestions =\n    //   this.quizLoginForm.get('numberOfQuestions')?.value;\n    // const selectedCategory = this.quizLoginForm.get('category')?.value;\n    // const selectedDifficulty = this.quizLoginForm.get('difficulty')?.value;\n    // this.store.dispatch(\n    //   QuizActions.setSelectedNumberOfQuestions({ selectedNumberOfQuestions })\n    // );\n    // this.store.dispatch(QuizActions.setSelectedCategory({ selectedCategory }));\n    // this.store.dispatch(\n    //   QuizActions.setSelectedDifficulty({ selectedDifficulty })\n    // );\n    console.log('form submit', this.quizLoginForm.value);\n    this.store.dispatch(QuizActions.submitForm({\n      formValue: this.quizLoginForm.value\n    }));\n    this.quizLoginForm.reset();\n    this.router.navigate(['/quizstart']);\n  }\n  static #_ = this.ɵfac = function UserLoginComponent_Factory(t) {\n    return new (t || UserLoginComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserLoginComponent,\n    selectors: [[\"quiz-app-user-login\"]],\n    decls: 34,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"result\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\", 1, \"mb-4\"], [\"placeholder\", \"Enter Username\", \"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\"], [\"for\", \"totalQuestions\", 1, \"mb-4\"], [\"type\", \"range\", \"id\", \"numberOfQuestions\", \"formControlName\", \"numberOfQuestions\", \"min\", \"1\", \"max\", \"10\"], [\"for\", \"difficulty\", 1, \"mb-4\"], [\"formControlName\", \"difficulty\"], [\"value\", \"easy\"], [\"value\", \"medium\"], [\"value\", \"hard\"], [\"for\", \"category\", 1, \"mb-4\"], [\"formControlName\", \"category\", \"multiple\", \"true\"], [4, \"ngFor\", \"ngForOf\"], [1, \"quizSubmit\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function UserLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"User Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit(ctx.quizLoginForm.value);\n        });\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Total Questions:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 7);\n        i0.ɵɵtext(16, \"Difficulty:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ng-select\", 8)(18, \"ng-option\", 9);\n        i0.ɵɵtext(19, \"Easy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ng-option\", 10);\n        i0.ɵɵtext(21, \"Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ng-option\", 11);\n        i0.ɵɵtext(23, \"Hard\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\")(25, \"label\", 12);\n        i0.ɵɵtext(26, \"Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"ng-select\", 13);\n        i0.ɵɵtemplate(28, UserLoginComponent_ng_option_28_Template, 2, 1, \"ng-option\", 14);\n        i0.ɵɵpipe(29, \"keyvalue\");\n        i0.ɵɵpipe(30, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 15)(32, \"button\", 16);\n        i0.ɵɵtext(33, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.quizLoginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate((tmp_1_0 = ctx.quizLoginForm.get(\"numberOfQuestions\")) == null ? null : tmp_1_0.value);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(29, 4, i0.ɵɵpipeBind1(30, 6, ctx.categories$)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.quizLoginForm.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RangeValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.NgSelectComponent, i5.NgOptionComponent, i4.AsyncPipe, i4.KeyValuePipe],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n.container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 26px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%] {\\n  background: rgba(217, 214, 228, 0.12);\\n  border-radius: 10px;\\n  padding: 40px;\\n  width: 26rem;\\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .mb-4[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 98%;\\n  padding: 0.9rem 0.3rem;\\n  font-size: 19px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder {\\n  font-size: 19px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .category[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-top: 9px;\\n  font-size: 21px;\\n  font-weight: 600;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .quizSubmit[_ngcontent-%COMP%] {\\n  text-align: right;\\n  margin-top: 10px;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .quizSubmit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  background-color: #0abab5;\\n  color: #fff;\\n}\\n.container[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .quizSubmit[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed;\\n  opacity: 0.7;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvcXVpei1yZWR1eC1hcHAvc3JjL2FwcC91c2VyLWxvZ2luL3VzZXItbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSx5Q0FBQTtBQUNKO0FBQ0k7RUFDSSxrQkFBQTtFQUNBLGVBQUE7QUFDUjtBQUVJO0VBQ0kscUNBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0EsMEVBQUE7QUFBUjtBQUlZO0VBQ0ksbUJBQUE7QUFGaEI7QUFLWTtFQUNJLFVBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7QUFIaEI7QUFPWTs7RUFFSSxjQUFBO0VBQ0EsV0FBQTtBQUxoQjtBQVFZO0VBQ0ksZUFBQTtBQU5oQjtBQVNZO0VBQ0ksa0JBQUE7QUFQaEI7QUFVWTtFQUNJLGVBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFSaEI7QUFZWTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUFWaEI7QUFZZ0I7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7QUFWcEI7QUFZb0I7RUFDSSxtQkFBQTtFQUNBLFlBQUE7QUFWeEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcblxuICAgIGgxIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXNpemU6IDI2cHg7XG4gICAgfVxuXG4gICAgLnJlc3VsdCB7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjE3LCAyMTQsIDIyOCwgMC4xMik7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgICAgIHdpZHRoOiAyNnJlbTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XG5cblxuICAgICAgICBmb3JtIHtcbiAgICAgICAgICAgIC5tYi00IHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDk4JTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwLjlyZW0gMC4zcmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTlweDtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsYWJlbCxcbiAgICAgICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIDo6cGxhY2Vob2xkZXIge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmNhdGVnb3J5IHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMXB4O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnF1aXpTdWJtaXQge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICAgICAgICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwcmVtO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTFweCAwO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGFiYWI1O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcblxuICAgICAgICAgICAgICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,MAAM,QAAQ,iBAAiB;AAExC,SAASC,WAAW,QAAQ,4BAA4B;AAExD,SAASC,KAAK,QAAQ,aAAa;AAGnC,SACEC,gBAAgB,QAEX,8BAA8B;;;;;;;;;IC0B3BC,iCAEG;IAAAA,YAAqB;IAAAA,iBACvB;;;;IADEA,eAAqB;IAArBA,wCAAqB;;;ADrBlC,OAAM,MAAOC,kBAAkB;EAI7BC,YACUC,KAAY,EACZC,EAAe,EACfC,MAAc;IAFd,UAAK,GAALF,KAAK;IACL,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACV,WAAW,CAACW,cAAc,EAAE,CAAC;IAEjD;IACA,IAAI,CAACC,WAAW,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,CAACX,gBAAgB,CAAC;IACtD;IACA,IAAI,CAACY,aAAa,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MACjCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACmB,QAAQ,CAAC,CAAC;MACrCC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAACpB,UAAU,CAACmB,QAAQ,EAAEnB,UAAU,CAACqB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAChEC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACmB,QAAQ,CAAC,CAAC;MACvCI,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACvB,UAAU,CAACmB,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAK,QAAQ,CAACC,SAAc;IACrB;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACX,aAAa,CAACY,KAAK,CAAC;IACpD,IAAI,CAACpB,KAAK,CAACI,QAAQ,CACjBV,WAAW,CAAC2B,UAAU,CAAC;MAAEJ,SAAS,EAAE,IAAI,CAACT,aAAa,CAACY;IAAK,CAAE,CAAC,CAChE;IACD,IAAI,CAACZ,aAAa,CAACc,KAAK,EAAE;IAC1B,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAAC;qBA5CUzB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCnB/B/B,8BAAuB;QAEfA,0BAAU;QAAAA,iBAAK;QACnBA,+BAGC;QADCA;UAAA,OAAYgC,qCAA6B;QAAA,EAAC;QAE1ChC,gCAAmC;QAAAA,yBAAS;QAAAA,iBAAQ;QACpDA,2BAKE;QAEFA,2BAAK;QACsCA,iCAAgB;QAAAA,iBAAQ;QACjEA,4BAME;QACFA,6BAAM;QAAAA,aAAmD;QAAAA,iBAAO;QAElEA,4BAAK;QACkCA,4BAAW;QAAAA,iBAAQ;QACxDA,qCAAwC;QACdA,qBAAI;QAAAA,iBAAY;QACxCA,sCAA0B;QAAAA,uBAAM;QAAAA,iBAAY;QAC5CA,sCAAwB;QAAAA,qBAAI;QAAAA,iBAAY;QAI5CA,4BAAK;QACgCA,0BAAS;QAAAA,iBAAQ;QACpDA,sCAAsD;QACpDA,kFAGC;;;QACHA,iBAAY;QAGdA,gCAAwB;QACmCA,uBAAM;QAAAA,iBAAS;;;;QA1C1EA,eAA2B;QAA3BA,6CAA2B;QAoBnBA,eAAmD;QAAnDA,2GAAmD;QAe7BA,gBAAiC;QAAjCA,uFAAiC;QAOvCA,eAAkC;QAAlCA,oDAAkC","names":["FormBuilder","Validators","Router","QuizActions","Store","selectCategories","i0","UserLoginComponent","constructor","store","fb","router","ngOnInit","dispatch","loadCategories","categories$","select","quizLoginForm","group","username","required","numberOfQuestions","min","difficulty","category","onSubmit","formValue","console","log","value","submitForm","reset","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/user-login/user-login.component.ts","/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/user-login/user-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { QuizActions } from '../+state/quiz-app.actions';\n\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Categories } from '../quiz/quiz.interface';\nimport {\n  selectCategories,\n  selectTotalQuestions,\n} from '../+state/quiz-app.selectors';\n\n@Component({\n  selector: 'quiz-app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss'],\n})\nexport class UserLoginComponent {\n  quizLoginForm!: FormGroup;\n  categories$!: Observable<Categories>;\n  totalQuestions$!: Observable<number>;\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(QuizActions.loadCategories());\n\n    // this.totalQuestions$ = this.store.select(selectTotalQuestions);\n    this.categories$ = this.store.select(selectCategories);\n    // this.store.dispatch(QuizActions.loadCategories());\n    this.quizLoginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      numberOfQuestions: [0, [Validators.required, Validators.min(1)]],\n      difficulty: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(formValue: any) {\n    // const selectedNumberOfQuestions =\n    //   this.quizLoginForm.get('numberOfQuestions')?.value;\n    // const selectedCategory = this.quizLoginForm.get('category')?.value;\n    // const selectedDifficulty = this.quizLoginForm.get('difficulty')?.value;\n\n    // this.store.dispatch(\n    //   QuizActions.setSelectedNumberOfQuestions({ selectedNumberOfQuestions })\n    // );\n    // this.store.dispatch(QuizActions.setSelectedCategory({ selectedCategory }));\n    // this.store.dispatch(\n    //   QuizActions.setSelectedDifficulty({ selectedDifficulty })\n    // );\n\n    console.log('form submit', this.quizLoginForm.value);\n    this.store.dispatch(\n      QuizActions.submitForm({ formValue: this.quizLoginForm.value })\n    );\n    this.quizLoginForm.reset();\n    this.router.navigate(['/quizstart']);\n  }\n}\n","<div class=\"container\">\n  <div class=\"result\">\n    <h1>User Login</h1>\n    <form\n      [formGroup]=\"quizLoginForm\"\n      (ngSubmit)=\"onSubmit(quizLoginForm.value)\"\n    >\n      <label class=\"mb-4\" for=\"username\">Username:</label>\n      <input\n        placeholder=\"Enter Username\"\n        type=\"text\"\n        id=\"username\"\n        formControlName=\"username\"\n      />\n\n      <div>\n        <label class=\"mb-4\" for=\"totalQuestions\">Total Questions:</label>\n        <input\n          type=\"range\"\n          id=\"numberOfQuestions\"\n          formControlName=\"numberOfQuestions\"\n          min=\"1\"\n          max=\"10\"\n        />\n        <span>{{ quizLoginForm.get('numberOfQuestions')?.value }}</span>\n      </div>\n      <div>\n        <label class=\"mb-4\" for=\"difficulty\">Difficulty:</label>\n        <ng-select formControlName=\"difficulty\">\n          <ng-option value=\"easy\">Easy</ng-option>\n          <ng-option value=\"medium\">Medium</ng-option>\n          <ng-option value=\"hard\">Hard</ng-option>\n        </ng-select>\n      </div>\n\n      <div>\n        <label class=\"mb-4\" for=\"category\">Category:</label>\n        <ng-select formControlName=\"category\" multiple=\"true\">\n          <ng-option\n            *ngFor=\"let categoryKey of categories$ | async | keyvalue\"\n            >{{ categoryKey.key }}</ng-option\n          >\n        </ng-select>\n      </div>\n\n      <div class=\"quizSubmit\">\n        <button type=\"submit\" [disabled]=\"quizLoginForm.invalid\">Submit</button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}