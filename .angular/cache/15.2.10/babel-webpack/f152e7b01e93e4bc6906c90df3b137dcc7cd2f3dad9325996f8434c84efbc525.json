{"ast":null,"code":"import { createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport * as QuizAppActions from './quiz-app.actions';\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\nexport const quizAppAdapter = createEntityAdapter();\nexport const initialQuizAppState = quizAppAdapter.getInitialState({\n  // set initial required properties\n  loaded: false\n});\nconst reducer = createReducer(initialQuizAppState, on(QuizAppActions.initQuizApp, state => ({\n  ...state,\n  loaded: false,\n  error: null\n})), on(QuizAppActions.loadQuizAppSuccess, (state, {\n  quizApp\n}) => quizAppAdapter.setAll(quizApp, {\n  ...state,\n  loaded: true\n})), on(QuizAppActions.loadQuizAppFailure, (state, {\n  error\n}) => ({\n  ...state,\n  error\n})));\nexport function quizAppReducer(state, action) {\n  return reducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAAqCA,mBAAmB,QAAQ,cAAc;AAC9E,SAASC,aAAa,EAAEC,EAAE,QAAgB,aAAa;AAEvD,OAAO,KAAKC,cAAc,MAAM,oBAAoB;AAGpD,OAAO,MAAMC,oBAAoB,GAAG,SAAS;AAY7C,OAAO,MAAMC,cAAc,GACzBL,mBAAmB,EAAiB;AAEtC,OAAO,MAAMM,mBAAmB,GAAiBD,cAAc,CAACE,eAAe,CAC7E;EACE;EACAC,MAAM,EAAE;CACT,CACF;AAED,MAAMC,OAAO,GAAGR,aAAa,CAC3BK,mBAAmB,EACnBJ,EAAE,CAACC,cAAc,CAACO,WAAW,EAAGC,KAAK,KAAM;EACzC,GAAGA,KAAK;EACRH,MAAM,EAAE,KAAK;EACbI,KAAK,EAAE;CACR,CAAC,CAAC,EACHV,EAAE,CAACC,cAAc,CAACU,kBAAkB,EAAE,CAACF,KAAK,EAAE;EAAEG;AAAO,CAAE,KACvDT,cAAc,CAACU,MAAM,CAACD,OAAO,EAAE;EAAE,GAAGH,KAAK;EAAEH,MAAM,EAAE;AAAI,CAAE,CAAC,CAC3D,EACDN,EAAE,CAACC,cAAc,CAACa,kBAAkB,EAAE,CAACL,KAAK,EAAE;EAAEC;AAAK,CAAE,MAAM;EAC3D,GAAGD,KAAK;EACRC;CACD,CAAC,CAAC,CACJ;AAED,OAAM,SAAUK,cAAc,CAC5BN,KAA+B,EAC/BO,MAAc;EAEd,OAAOT,OAAO,CAACE,KAAK,EAAEO,MAAM,CAAC;AAC/B","names":["createEntityAdapter","createReducer","on","QuizAppActions","QUIZ_APP_FEATURE_KEY","quizAppAdapter","initialQuizAppState","getInitialState","loaded","reducer","initQuizApp","state","error","loadQuizAppSuccess","quizApp","setAll","loadQuizAppFailure","quizAppReducer","action"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.reducer.ts"],"sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nimport * as QuizAppActions from './quiz-app.actions';\nimport { QuizAppEntity } from './quiz-app.models';\n\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\n\nexport interface QuizAppState extends EntityState<QuizAppEntity> {\n  selectedId?: string | number; // which QuizApp record has been selected\n  loaded: boolean; // has the QuizApp list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface QuizAppPartialState {\n  readonly [QUIZ_APP_FEATURE_KEY]: QuizAppState;\n}\n\nexport const quizAppAdapter: EntityAdapter<QuizAppEntity> =\n  createEntityAdapter<QuizAppEntity>();\n\nexport const initialQuizAppState: QuizAppState = quizAppAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n  }\n);\n\nconst reducer = createReducer(\n  initialQuizAppState,\n  on(QuizAppActions.initQuizApp, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(QuizAppActions.loadQuizAppSuccess, (state, { quizApp }) =>\n    quizAppAdapter.setAll(quizApp, { ...state, loaded: true })\n  ),\n  on(QuizAppActions.loadQuizAppFailure, (state, { error }) => ({\n    ...state,\n    error,\n  }))\n);\n\nexport function quizAppReducer(\n  state: QuizAppState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}