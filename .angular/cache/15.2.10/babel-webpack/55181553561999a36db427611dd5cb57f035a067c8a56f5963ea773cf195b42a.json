{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { QuizActions } from './quiz-app.actions';\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\nexport const initialState = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n  selectedOption: '',\n  isOptionSelected: false,\n  selectedOptionClass: '',\n  correctAnswerClass: '',\n  selectedResponses: []\n};\nexport const quizAppReducer = createReducer(initialState, on(QuizActions.loadQuestionsSuccess, (state, {\n  questions\n}) => ({\n  ...state,\n  questions\n})),\n// on(QuizActions.selectOption, (state, { option }) => ({\n//   ...state,\n//   selectedOption: option,\n//   isOptionSelected: true,\n//   selectedOptionClass:\n//     state.questions[state.current_Question_Index].correctAnswer === option\n//       ? 'correct-answer'\n//       : 'incorrect-answer',\n//   correctAnswerClass: 'correct-answer',\n// })),\non(QuizActions.selectOption, (state, {\n  option,\n  isCorrect\n}) => {\n  const updatedResponses = [...state.selectedResponses];\n  updatedResponses[state.current_Question_Index] = {\n    option,\n    isCorrect\n  };\n  return {\n    ...state,\n    selectedOption: option,\n    isOptionSelected: true,\n    selectedOptionClass: state.questions[state.current_Question_Index].correctAnswer === option ? 'correct-answer' : 'incorrect-answer',\n    correctAnswerClass: 'correct-answer',\n    selectedResponses: updatedResponses\n  };\n}), on(QuizActions.nextQuestion, state => {\n  const nextIndex = state.current_Question_Index + 1;\n  return {\n    ...state,\n    current_Question_Index: nextIndex,\n    currentQuestion: state.questions[nextIndex]?.question,\n    options: state.questions[nextIndex]?.options\n  };\n}), on(QuizActions.skipQuestion, state => {\n  const nextIndex = state.current_Question_Index + 1;\n  return {\n    ...state,\n    current_Question_Index: nextIndex,\n    currentQuestion: state.questions[nextIndex]?.question,\n    options: state.questions[nextIndex]?.options\n  };\n}), on(QuizActions.previousQuestion, state => {\n  const newIndex = Math.max(0, state.current_Question_Index - 1);\n  return {\n    ...state,\n    current_Question_Index: newIndex\n  };\n}), on(QuizActions.updateScore, (state, {\n  score\n}) => {\n  return {\n    ...state,\n    current_score: state.current_score + score\n  };\n}), on(QuizActions.restartQuiz, () => initialState));","map":{"version":3,"mappings":"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","names":["createReducer","on","QuizActions","QUIZ_APP_FEATURE_KEY","initialState","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","selectedOption","isOptionSelected","selectedOptionClass","correctAnswerClass","selectedResponses","quizAppReducer","loadQuestionsSuccess","state","selectOption","option","isCorrect","updatedResponses","correctAnswer","nextQuestion","nextIndex","question","skipQuestion","previousQuestion","newIndex","Math","max","updateScore","score","restartQuiz"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.reducer.ts"],"sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { QuizActions } from './quiz-app.actions';\nimport { QuizAppEntity } from './quiz-app.models';\nimport { Quiz } from '../quiz/quiz.interface';\n\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\n\nexport const initialState: Quiz = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n  selectedOption: '',\n  isOptionSelected: false,\n  selectedOptionClass: '',\n  correctAnswerClass: '',\n  selectedResponses: [],\n};\n\nexport const quizAppReducer = createReducer(\n  initialState,\n  on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n    ...state,\n    questions,\n  })),\n\n  // on(QuizActions.selectOption, (state, { option }) => ({\n  //   ...state,\n  //   selectedOption: option,\n  //   isOptionSelected: true,\n  //   selectedOptionClass:\n  //     state.questions[state.current_Question_Index].correctAnswer === option\n  //       ? 'correct-answer'\n  //       : 'incorrect-answer',\n  //   correctAnswerClass: 'correct-answer',\n  // })),\n  on(QuizActions.selectOption, (state, { option, isCorrect }) => {\n    const updatedResponses = [...state.selectedResponses];\n    updatedResponses[state.current_Question_Index] = { option, isCorrect };\n\n    return {\n      ...state,\n      selectedOption: option,\n      isOptionSelected: true,\n      selectedOptionClass:\n        state.questions[state.current_Question_Index].correctAnswer === option\n          ? 'correct-answer'\n          : 'incorrect-answer',\n      correctAnswerClass: 'correct-answer',\n      selectedResponses: updatedResponses,\n    };\n  }),\n\n  on(QuizActions.nextQuestion, (state) => {\n    const nextIndex = state.current_Question_Index + 1;\n\n    return {\n      ...state,\n      current_Question_Index: nextIndex,\n      currentQuestion: state.questions[nextIndex]?.question,\n      options: state.questions[nextIndex]?.options,\n    };\n  }),\n  on(QuizActions.skipQuestion, (state) => {\n    const nextIndex = state.current_Question_Index + 1;\n\n    return {\n      ...state,\n      current_Question_Index: nextIndex,\n      currentQuestion: state.questions[nextIndex]?.question,\n      options: state.questions[nextIndex]?.options,\n    };\n  }),\n  on(QuizActions.previousQuestion, (state) => {\n    const newIndex = Math.max(0, state.current_Question_Index - 1);\n    return { ...state, current_Question_Index: newIndex };\n  }),\n\n  on(QuizActions.updateScore, (state, { score }) => {\n    return { ...state, current_score: state.current_score + score };\n  }),\n\n  on(QuizActions.restartQuiz, () => initialState)\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}