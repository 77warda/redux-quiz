{"ast":null,"code":"import { QuizReduxService } from '../quiz-redux.service';\nimport { Store, select } from '@ngrx/store';\nimport * as QuizActions from '../+state/quiz-app.actions';\nimport { Observable } from 'rxjs';\nimport { selectCurrentQuestionIndex, selectQuestions, selectTotalQuestions } from '../+state/quiz-app.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz-redux.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nfunction QuizComponent_div_2_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_2_button_9_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const option_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.selectOption(option_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction QuizComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 2);\n    i0.ɵɵtext(2, \"Redux Angular Quiz\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5);\n    i0.ɵɵtemplate(9, QuizComponent_div_2_button_9_Template, 2, 1, \"button\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 7)(11, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.nextQuestion());\n    });\n    i0.ɵɵtext(12, \"Next\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const currentQuestion_r1 = ctx.ngIf;\n    const totalQuestions_r2 = ctx.totalQuestions$;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", currentQuestion_r1.index + 1, \"/\", totalQuestions_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(currentQuestion_r1.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", currentQuestion_r1.options);\n  }\n}\nexport class QuizComponent {\n  constructor(triviaService, store) {\n    this.triviaService = triviaService;\n    this.store = store;\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n    this.state = {\n      totalQuestions: 0,\n      current_score: 0,\n      total_score: 0,\n      questions: [],\n      options: [],\n      currentQuestion: '',\n      current_Question_Index: 0\n    };\n    this.questions$ = this.store.pipe(select(selectQuestions));\n    this.currentQuestionIndex$ = this.store.pipe(select(selectCurrentQuestionIndex));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n  }\n  ngOnInit() {\n    this.restartQuiz();\n    this.store.dispatch(QuizActions.loadQuestions());\n    this.currentQuestionIndex$ = this.store.pipe(select(selectCurrentQuestionIndex));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.currentQuestion$ = this.store.pipe(select(selectCurrentQuestion));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n  }\n  restartQuiz() {\n    // this.fetchTriviaQuestion();\n    this.state.current_score = 0;\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  shuffleArray(array) {\n    return array.sort(() => Math.random() - 0.6);\n  }\n  // fetchTriviaQuestion() {\n  //   this.triviaService.getTriviaQuestion().subscribe((triviaResponse: any) => {\n  //     if (triviaResponse) {\n  //       const questions: Question[] = triviaResponse.map(\n  //         (questionItem: any) => ({\n  //           question: questionItem.question.text,\n  //           options: this.shuffleArray([\n  //             ...questionItem.incorrectAnswers,\n  //             questionItem.correctAnswer,\n  //           ]),\n  //           correctAnswer: questionItem.correctAnswer,\n  //         })\n  //       );\n  //       // Dispatch the loadQuestionsSuccess action with the correct payload\n  //       this.store.dispatch(QuizActions.loadQuestionsSuccess({ questions }));\n  //       this.state.totalQuestions = triviaResponse.length;\n  //       this.state.total_score = triviaResponse.length;\n  //       this.state.questions = questions;\n  //       this.setCurrentQuestion(0);\n  //     } else {\n  //       console.error('Invalid response structure');\n  //     }\n  //   });\n  // }\n  setCurrentQuestion(index) {\n    this.quizText = 'Redux Angular Quiz';\n    this.state.current_Question_Index = index;\n    this.state.currentQuestion = this.state.questions[index].question;\n    this.state.options = this.state.questions[index].options;\n  }\n  nextQuestion() {\n    const nextIndex = this.state.current_Question_Index + 1;\n    // Dispatch the nextQuestion action\n    this.store.dispatch(QuizActions.nextQuestion());\n    this.setCurrentQuestion(nextIndex);\n    // reset styling\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n    this.isOptionSelected = false;\n  }\n  isCorrectAnswer(option) {\n    const correctAnswer = this.state.questions[this.state.current_Question_Index].correctAnswer;\n    return correctAnswer === option;\n  }\n  // Function to handle option selection\n  selectOption(option) {\n    if (!this.selectedOption) {\n      this.selectedOption = option;\n      const isCorrect = this.isCorrectAnswer(option);\n      console.log('Selected option:', option);\n      console.log('Is correct:', isCorrect);\n      this.store.dispatch(QuizActions.selectOption({\n        option\n      }));\n      if (isCorrect) {\n        this.state.current_score++;\n      }\n      this.selectedOptionClass = isCorrect ? 'correct-answer' : 'incorrect-answer';\n      this.correctAnswerClass = 'correct-answer';\n      this.isOptionSelected = true;\n    }\n  }\n  static #_ = this.ɵfac = function QuizComponent_Factory(t) {\n    return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.QuizReduxService), i0.ɵɵdirectiveInject(i2.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuizComponent,\n    selectors: [[\"quiz-app-quiz\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[\"id\", \"section-1\", 1, \"section-1\"], [4, \"ngIf\"], [1, \"text-container\"], [1, \"flex\"], [1, \"question-style\"], [1, \"quiz-options\"], [\"class\", \"option-btn\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn-flex\"], [1, \"next-btn\", 3, \"click\"], [1, \"option-btn\", 3, \"click\"]],\n    template: function QuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"main\");\n        i0.ɵɵtemplate(2, QuizComponent_div_2_Template, 13, 4, \"div\", 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.currentQuestion$));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  font-family: Arial, Helvetica, sans-serif;\\n  color: #fff;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  background: linear-gradient(to right, #3f2b96, #a8c0ff);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%] {\\n  background: rgba(217, 214, 228, 0.12);\\n  border-radius: 10px;\\n  padding: 40px;\\n  width: 26rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 1rem auto;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin: 1.4rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .question-style[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  font-size: 18px;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%] {\\n  margin: 15px 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  border-radius: 5px;\\n  background: #eee;\\n  margin-bottom: 15px;\\n  padding: 6px 0;\\n  position: relative;\\n  width: 100%;\\n  color: #000;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  text-align: left;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .alphabet[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n  border: solid 1px #000;\\n  padding: 0.4rem 0.5rem 0.4rem;\\n  width: 2.3rem;\\n  margin: 0 1.3rem 0 0.7rem;\\n  display: flex;\\n  justify-content: center;\\n  color: #000;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   .alphabet[_ngcontent-%COMP%] {\\n  background: #000;\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed !important;\\n  opacity: 0.9;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin: 2rem 0 0.3rem 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%], section[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%] {\\n  background: rgb(0, 24, 130);\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed !important;\\n  opacity: 0.6;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%] {\\n  background: #fff;\\n  color: rgb(0, 24, 130);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.671);\\n  color: rgba(0, 0, 0, 0.749);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: auto;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], section[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  padding: 0.4rem 0.9rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  background: rgb(0, 24, 130);\\n  color: #fff;\\n}\\n\\n.selected-option[_ngcontent-%COMP%] {\\n  background-color: #F44336 !important;\\n}\\n\\n.correct-answer[_ngcontent-%COMP%] {\\n  background-color: #4CAF50 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvcXVpei1yZWR1eC1hcHAvc3JjL2FwcC9xdWl6L3F1aXouY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9Bbmd1bGFyJTIwYXBwcy9xdWl6LWFwcC9hcHBzL3F1aXotcmVkdXgtYXBwL3NyYy9hcHAvcXVpei9xdWl6LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSx5Q0FBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFFQSx1REFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQ0NKO0FEQ0k7RUFDSSxxQ0FBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7QUNDUjtBRENRO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtBQ0NaO0FERVE7RUFDSSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUNBWjtBREtRO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0FDSFo7QURNUTtFQUNJLGNBQUE7QUNKWjtBRE1ZO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0poQjtBRE1nQjtFQUNJLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSw2QkFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7QUNKcEI7QURRb0I7RUFDSSxnQkFBQTtFQUNBLFdBQUE7QUNOeEI7QURVZ0I7RUFDSSw4QkFBQTtFQUNBLFlBQUE7QUNScEI7QURlUTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0EsdUJBQUE7QUNiWjtBRGVZOztFQUVJLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQ2JoQjtBRGtCWTtFQUNJLDJCQUFBO0VBQ0EsV0FBQTtBQ2hCaEI7QURrQmdCO0VBQ0ksOEJBQUE7RUFDQSxZQUFBO0FDaEJwQjtBRG9CWTtFQUNJLGdCQUFBO0VBQ0Esc0JBQUE7QUNsQmhCO0FEb0JnQjtFQUNJLHNDQUFBO0VBQ0EsMkJBQUE7QUNsQnBCO0FEdUJRO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0FDckJaO0FEdUJZOztFQUVJLHNCQUFBO0FDckJoQjtBRHdCWTtFQUNJLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDJCQUFBO0VBQ0EsV0FBQTtBQ3RCaEI7O0FEOEJBO0VBQ0ksb0NBQUE7QUMzQko7O0FEOEJBO0VBQ0ksb0NBQUE7QUMzQkoiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiAjYThjMGZmO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG5hIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG59XG5cbnNlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICNhOGMwZmY7XG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMzZjJiOTYsICNhOGMwZmYpO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzNmMmI5NiwgI2E4YzBmZik7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICBtYWluIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMTcsIDIxNCwgMjI4LCAwLjEyKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgcGFkZGluZzogNDBweDtcbiAgICAgICAgd2lkdGg6IDI2cmVtO1xuXG4gICAgICAgIC50ZXh0LWNvbnRhaW5lciB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW0gYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgIC5mbGV4IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luOiAxLjRyZW07XG5cbiAgICAgICAgICAgIC5zY29yZS10ZXh0IHt9XG4gICAgICAgIH1cblxuICAgICAgICAucXVlc3Rpb24tc3R5bGUge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5xdWl6LW9wdGlvbnMge1xuICAgICAgICAgICAgbWFyZ2luOiAxNXB4IDA7XG5cbiAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogNnB4IDA7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICAgICAgICAgICAgLmFscGhhYmV0IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IHNvbGlkIDFweCAjMDAwO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNHJlbSAuNXJlbSAuNHJlbTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIuM3JlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDEuM3JlbSAwIC43cmVtO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIC5hbHBoYWJldCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4tZmxleCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICBtYXJnaW46IDJyZW0gMCAwLjNyZW0gMDtcblxuICAgICAgICAgICAgLm5leHQtYnRuLFxuICAgICAgICAgICAgLnNraXAtYnRuIHtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwcmVtO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTFweCAwO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG5cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubmV4dC1idG4ge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigwLCAyNCwgMTMwKTtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcblxuICAgICAgICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5za2lwLWJ0biB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDAsIDI0LCAxMzApO1xuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42NzEpO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc0OSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnF1aXotZmluaXNoZWQge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgICAgICAgICBoMSxcbiAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwLjRyZW0gMC45cmVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubmV4dC1idG4ge1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTByZW07XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMXB4IDA7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMCwgMjQsIDEzMCk7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG4uc2VsZWN0ZWQtb3B0aW9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjQ0MzM2ICFpbXBvcnRhbnQ7IC8vIEJsdWUgYmFja2dyb3VuZCBmb3Igc2VsZWN0ZWQgb3B0aW9uXG59XG5cbi5jb3JyZWN0LWFuc3dlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MCAhaW1wb3J0YW50OyAvLyBHcmVlbiBiYWNrZ3JvdW5kIGZvciB0aGUgY29ycmVjdCBhbnN3ZXJcbn0iLCJib2R5IHtcbiAgYmFja2dyb3VuZDogI2E4YzBmZjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuc2VjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNhOGMwZmY7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjM2YyYjk2LCAjYThjMGZmKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjM2YyYjk2LCAjYThjMGZmKTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5zZWN0aW9uIG1haW4ge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDIxNywgMjE0LCAyMjgsIDAuMTIpO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBwYWRkaW5nOiA0MHB4O1xuICB3aWR0aDogMjZyZW07XG59XG5zZWN0aW9uIG1haW4gLnRleHQtY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDFyZW0gYXV0bztcbn1cbnNlY3Rpb24gbWFpbiAuZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAxLjRyZW07XG59XG5zZWN0aW9uIG1haW4gLnF1ZXN0aW9uLXN0eWxlIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuc2VjdGlvbiBtYWluIC5xdWl6LW9wdGlvbnMge1xuICBtYXJnaW46IDE1cHggMDtcbn1cbnNlY3Rpb24gbWFpbiAucXVpei1vcHRpb25zIGJ1dHRvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZDogI2VlZTtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgcGFkZGluZzogNnB4IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiAjMDAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbnNlY3Rpb24gbWFpbiAucXVpei1vcHRpb25zIGJ1dHRvbiAuYWxwaGFiZXQge1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJvcmRlcjogc29saWQgMXB4ICMwMDA7XG4gIHBhZGRpbmc6IDAuNHJlbSAwLjVyZW0gMC40cmVtO1xuICB3aWR0aDogMi4zcmVtO1xuICBtYXJnaW46IDAgMS4zcmVtIDAgMC43cmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgY29sb3I6ICMwMDA7XG59XG5zZWN0aW9uIG1haW4gLnF1aXotb3B0aW9ucyBidXR0b246aG92ZXIgLmFscGhhYmV0IHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5zZWN0aW9uIG1haW4gLnF1aXotb3B0aW9ucyBidXR0b246ZGlzYWJsZWQge1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuOTtcbn1cbnNlY3Rpb24gbWFpbiAuYnRuLWZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBtYXJnaW46IDJyZW0gMCAwLjNyZW0gMDtcbn1cbnNlY3Rpb24gbWFpbiAuYnRuLWZsZXggLm5leHQtYnRuLFxuc2VjdGlvbiBtYWluIC5idG4tZmxleCAuc2tpcC1idG4ge1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgd2lkdGg6IDEwcmVtO1xuICBtYXJnaW46IDAgYXV0bztcbiAgb3V0bGluZTogbm9uZTtcbiAgcGFkZGluZzogMTFweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xufVxuc2VjdGlvbiBtYWluIC5idG4tZmxleCAubmV4dC1idG4ge1xuICBiYWNrZ3JvdW5kOiByZ2IoMCwgMjQsIDEzMCk7XG4gIGNvbG9yOiAjZmZmO1xufVxuc2VjdGlvbiBtYWluIC5idG4tZmxleCAubmV4dC1idG46ZGlzYWJsZWQge1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuNjtcbn1cbnNlY3Rpb24gbWFpbiAuYnRuLWZsZXggLnNraXAtYnRuIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgY29sb3I6IHJnYigwLCAyNCwgMTMwKTtcbn1cbnNlY3Rpb24gbWFpbiAuYnRuLWZsZXggLnNraXAtYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY3MSk7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzQ5KTtcbn1cbnNlY3Rpb24gbWFpbiAucXVpei1maW5pc2hlZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiBhdXRvO1xufVxuc2VjdGlvbiBtYWluIC5xdWl6LWZpbmlzaGVkIGgxLFxuc2VjdGlvbiBtYWluIC5xdWl6LWZpbmlzaGVkIGgzIHtcbiAgcGFkZGluZzogMC40cmVtIDAuOXJlbTtcbn1cbnNlY3Rpb24gbWFpbiAucXVpei1maW5pc2hlZCAubmV4dC1idG4ge1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgd2lkdGg6IDEwcmVtO1xuICBtYXJnaW46IDAgYXV0bztcbiAgb3V0bGluZTogbm9uZTtcbiAgcGFkZGluZzogMTFweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kOiByZ2IoMCwgMjQsIDEzMCk7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uc2VsZWN0ZWQtb3B0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y0NDMzNiAhaW1wb3J0YW50O1xufVxuXG4uY29ycmVjdC1hbnN3ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["QuizReduxService","Store","select","QuizActions","Observable","selectCurrentQuestionIndex","selectQuestions","selectTotalQuestions","i0","QuizComponent","constructor","triviaService","store","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","questions$","pipe","currentQuestionIndex$","totalQuestions$","ngOnInit","restartQuiz","dispatch","loadQuestions","currentQuestion$","selectCurrentQuestion","state","isOptionSelected","selectedOption","selectedOptionClass","correctAnswerClass","shuffleArray","array","sort","Math","random","setCurrentQuestion","index","quizText","question","nextQuestion","nextIndex","isCorrectAnswer","option","correctAnswer","selectOption","isCorrect","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz/quiz.component.ts","/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz/quiz.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Question, Quiz } from './quiz.interface';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { Store, select } from '@ngrx/store';\nimport * as QuizActions from '../+state/quiz-app.actions';\nimport { quizAppReducer } from '../+state/quiz-app.reducer';\nimport { Observable, combineLatest, map, withLatestFrom } from 'rxjs';\nimport {\n  selectCurrentQuestionIndex,\n  selectQuestions,\n  selectTotalQuestions,\n} from '../+state/quiz-app.selectors';\n\n@Component({\n  selector: 'quiz-app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss'],\n})\nexport class QuizComponent implements OnInit {\n  questions$!: Observable<Question[]>;\n  currentQuestionIndex$!: Observable<number>;\n  currentQuestion$!: Observable<Question | undefined>;\n  totalQuestions$!: Observable<number>;\n  isOptionSelected = false;\n  quizText!: string;\n  selectedOption: string | null = null;\n  selectedOptionClass: string | null = null;\n  correctAnswerClass: string | null = null;\n  state: Quiz = {\n    totalQuestions: 0,\n    current_score: 0,\n    total_score: 0,\n    questions: [],\n    options: [],\n    currentQuestion: '',\n    current_Question_Index: 0,\n  };\n\n  constructor(private triviaService: QuizReduxService, private store: Store) {\n    this.questions$ = this.store.pipe(select(selectQuestions));\n    this.currentQuestionIndex$ = this.store.pipe(\n      select(selectCurrentQuestionIndex)\n    );\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n  }\n\n  ngOnInit(): void {\n    this.restartQuiz();\n    this.store.dispatch(QuizActions.loadQuestions());\n    this.currentQuestionIndex$ = this.store.pipe(\n      select(selectCurrentQuestionIndex)\n    );\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.currentQuestion$ = this.store.pipe(select(selectCurrentQuestion));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n  }\n\n  restartQuiz() {\n    // this.fetchTriviaQuestion();\n    this.state.current_score = 0;\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  shuffleArray(array: string[]): string[] {\n    return array.sort(() => Math.random() - 0.6);\n  }\n\n  // fetchTriviaQuestion() {\n  //   this.triviaService.getTriviaQuestion().subscribe((triviaResponse: any) => {\n  //     if (triviaResponse) {\n  //       const questions: Question[] = triviaResponse.map(\n  //         (questionItem: any) => ({\n  //           question: questionItem.question.text,\n  //           options: this.shuffleArray([\n  //             ...questionItem.incorrectAnswers,\n  //             questionItem.correctAnswer,\n  //           ]),\n  //           correctAnswer: questionItem.correctAnswer,\n  //         })\n  //       );\n\n  //       // Dispatch the loadQuestionsSuccess action with the correct payload\n  //       this.store.dispatch(QuizActions.loadQuestionsSuccess({ questions }));\n\n  //       this.state.totalQuestions = triviaResponse.length;\n  //       this.state.total_score = triviaResponse.length;\n  //       this.state.questions = questions;\n\n  //       this.setCurrentQuestion(0);\n  //     } else {\n  //       console.error('Invalid response structure');\n  //     }\n  //   });\n  // }\n\n  setCurrentQuestion(index: number) {\n    this.quizText = 'Redux Angular Quiz';\n    this.state.current_Question_Index = index;\n    this.state.currentQuestion = this.state.questions[index].question;\n    this.state.options = this.state.questions[index].options;\n  }\n\n  nextQuestion() {\n    const nextIndex = this.state.current_Question_Index + 1;\n\n    // Dispatch the nextQuestion action\n    this.store.dispatch(QuizActions.nextQuestion());\n    this.setCurrentQuestion(nextIndex);\n\n    // reset styling\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n    this.isOptionSelected = false;\n  }\n  isCorrectAnswer(option: string): boolean {\n    const correctAnswer =\n      this.state.questions[this.state.current_Question_Index].correctAnswer;\n    return correctAnswer === option;\n  }\n\n  // Function to handle option selection\n  selectOption(option: string) {\n    if (!this.selectedOption) {\n      this.selectedOption = option;\n      const isCorrect = this.isCorrectAnswer(option);\n\n      console.log('Selected option:', option);\n      console.log('Is correct:', isCorrect);\n      this.store.dispatch(QuizActions.selectOption({ option }));\n      if (isCorrect) {\n        this.state.current_score++;\n      }\n\n      this.selectedOptionClass = isCorrect\n        ? 'correct-answer'\n        : 'incorrect-answer';\n      this.correctAnswerClass = 'correct-answer';\n      this.isOptionSelected = true;\n    }\n  }\n}\n","<!-- QUIZ ONE\n<section class=\"section-1\" id=\"section-1\">\n  <main>\n    <div\n      *ngIf=\"\n        state.current_Question_Index < state.totalQuestions;\n        else quizFinished\n      \"\n    >\n      <h3 class=\"text-container\">{{ quizText }}</h3>\n      <div class=\"flex\">\n        <p>\n          {{ state.current_Question_Index + 1 }}/{{ state.questions.length }}\n        </p>\n        <p class=\"score-text\">\n          Score: {{ state.current_score }}/{{ state.total_score }}\n        </p>\n      </div>\n      <p class=\"question-style\">{{ state.currentQuestion }}</p>\n      <div class=\"quiz-options\">\n        <button\n          class=\"option-btn\"\n          *ngFor=\"let option of state.options; let i = index\"\n          [ngClass]=\"{\n            'selected-option': selectedOption === option,\n            'correct-answer':\n              correctAnswerClass === 'correct-answer' && isCorrectAnswer(option)\n          }\"\n          (click)=\"selectOption(option)\"\n          [disabled]=\"isOptionSelected\"\n        >\n          <span class=\"alphabet\">{{ i + 1 }}</span>\n          {{ option }}\n        </button>\n      </div>\n      <div class=\"btn-flex\">\n        <button class=\"skip-btn\" id=\"skip-btn\" type=\"submit\">Skip</button>\n        <button\n          class=\"next-btn\"\n          id=\"btn\"\n          type=\"submit\"\n          (click)=\"nextQuestion()\"\n          [disabled]=\"!isOptionSelected\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n    <ng-template #quizFinished>\n      <div class=\"quiz-finished\">\n        <h1>Quiz Finished</h1>\n        <h3>You have attempted {{ state.questions.length }} Questions</h3>\n        <h3>Your Score is</h3>\n        <h3>{{ state.current_score }} out of {{ state.total_score }}</h3>\n        <button class=\"next-btn\" id=\"btn\" type=\"submit\" (click)=\"restartQuiz()\">\n          Restart Quiz\n        </button>\n      </div>\n    </ng-template>\n  </main>\n</section>\n -->\n\n<section class=\"section-1\" id=\"section-1\">\n  <main>\n    <div\n      *ngIf=\"\n        currentQuestion$ | async as currentQuestion;\n        totalQuestions$ as totalQuestions\n      \"\n    >\n      <h3 class=\"text-container\">Redux Angular Quiz</h3>\n      <div class=\"flex\">\n        <p>{{ currentQuestion.index + 1 }}/{{ totalQuestions }}</p>\n        <!-- Other score-related information... -->\n      </div>\n      <p class=\"question-style\">{{ currentQuestion.text }}</p>\n      <div class=\"quiz-options\">\n        <button\n          class=\"option-btn\"\n          *ngFor=\"let option of currentQuestion.options; let i = index\"\n          (click)=\"selectOption(option)\"\n        >\n          {{ option }}\n        </button>\n      </div>\n      <div class=\"btn-flex\">\n        <button class=\"next-btn\" (click)=\"nextQuestion()\">Next</button>\n      </div>\n    </div>\n    <!-- Add your quiz finished template here if needed... -->\n  </main>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}