{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as QuizActions from './quiz-app.actions';\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\nexport const initialState = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0\n};\nexport const quizAppReducer = createReducer(initialState, on(QuizActions.loadQuestionsSuccess, (state, {\n  questions\n}) => ({\n  ...state,\n  questions\n})), on(QuizActions.nextQuestion, state => ({\n  ...state,\n  current_Question_Index: state.current_Question_Index + 1\n})), on(QuizActions.restartQuiz, () => initialState), on(QuizActions.setCurrentQuestion, (state, {\n  index\n}) => ({\n  ...state,\n  current_Question_Index: index,\n  currentQuestion: state.questions[index].question,\n  options: state.questions[index].options\n})),\n// Add the missing `on` clause for `selectOption`\non(QuizActions.selectOption, (state, {\n  option\n}) => ({\n  ...state,\n  selectedOption: option,\n  isOptionSelected: true,\n  selectedOptionClass: state.questions[state.current_Question_Index].correctAnswer === option ? 'correct-answer' : 'incorrect-answer',\n  correctAnswerClass: 'correct-answer'\n})));","map":{"version":3,"mappings":"AACA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAE/C,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AAIjD,OAAO,MAAMC,oBAAoB,GAAG,SAAS;AAE7C,OAAO,MAAMC,YAAY,GAAS;EAChCC,cAAc,EAAE,CAAC;EACjBC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,EAAE;EACnBC,sBAAsB,EAAE;CACzB;AAED,OAAO,MAAMC,cAAc,GAAGZ,aAAa,CACzCI,YAAY,EACZH,EAAE,CAACC,WAAW,CAACW,oBAAoB,EAAE,CAACC,KAAK,EAAE;EAAEN;AAAS,CAAE,MAAM;EAC9D,GAAGM,KAAK;EACRN;CACD,CAAC,CAAC,EACHP,EAAE,CAACC,WAAW,CAACa,YAAY,EAAGD,KAAK,KAAM;EACvC,GAAGA,KAAK;EACRH,sBAAsB,EAAEG,KAAK,CAACH,sBAAsB,GAAG;CACxD,CAAC,CAAC,EACHV,EAAE,CAACC,WAAW,CAACc,WAAW,EAAE,MAAMZ,YAAY,CAAC,EAC/CH,EAAE,CAACC,WAAW,CAACe,kBAAkB,EAAE,CAACH,KAAK,EAAE;EAAEI;AAAK,CAAE,MAAM;EACxD,GAAGJ,KAAK;EACRH,sBAAsB,EAAEO,KAAK;EAC7BR,eAAe,EAAEI,KAAK,CAACN,SAAS,CAACU,KAAK,CAAC,CAACC,QAAQ;EAChDV,OAAO,EAAEK,KAAK,CAACN,SAAS,CAACU,KAAK,CAAC,CAACT;CACjC,CAAC,CAAC;AACH;AACAR,EAAE,CAACC,WAAW,CAACkB,YAAY,EAAE,CAACN,KAAK,EAAE;EAAEO;AAAM,CAAE,MAAM;EACnD,GAAGP,KAAK;EACRQ,cAAc,EAAED,MAAM;EACtBE,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EACjBV,KAAK,CAACN,SAAS,CAACM,KAAK,CAACH,sBAAsB,CAAC,CAACc,aAAa,KAAKJ,MAAM,GAClE,gBAAgB,GAChB,kBAAkB;EACxBK,kBAAkB,EAAE;CACrB,CAAC,CAAC,CACJ","names":["createReducer","on","QuizActions","QUIZ_APP_FEATURE_KEY","initialState","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","quizAppReducer","loadQuestionsSuccess","state","nextQuestion","restartQuiz","setCurrentQuestion","index","question","selectOption","option","selectedOption","isOptionSelected","selectedOptionClass","correctAnswer","correctAnswerClass"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.reducer.ts"],"sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as QuizActions from './quiz-app.actions';\nimport { QuizAppEntity } from './quiz-app.models';\nimport { Quiz } from '../quiz/quiz.interface';\n\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\n\nexport const initialState: Quiz = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n};\n\nexport const quizAppReducer = createReducer(\n  initialState,\n  on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n    ...state,\n    questions,\n  })),\n  on(QuizActions.nextQuestion, (state) => ({\n    ...state,\n    current_Question_Index: state.current_Question_Index + 1,\n  })),\n  on(QuizActions.restartQuiz, () => initialState),\n  on(QuizActions.setCurrentQuestion, (state, { index }) => ({\n    ...state,\n    current_Question_Index: index,\n    currentQuestion: state.questions[index].question,\n    options: state.questions[index].options,\n  })),\n  // Add the missing `on` clause for `selectOption`\n  on(QuizActions.selectOption, (state, { option }) => ({\n    ...state,\n    selectedOption: option,\n    isOptionSelected: true,\n    selectedOptionClass:\n      state.questions[state.current_Question_Index].correctAnswer === option\n        ? 'correct-answer'\n        : 'incorrect-answer',\n    correctAnswerClass: 'correct-answer',\n  }))\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}