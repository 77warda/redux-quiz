{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as QuizActions from './quiz-app.actions';\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\nexport const initialState = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0\n};\nexport const quizAppReducer = createReducer(initialState, on(QuizActions.loadQuestionsSuccess, (state, {\n  questions\n}) => ({\n  ...state,\n  questions\n})), on(QuizActions.selectOption, (state, {\n  option\n}) => ({\n  ...state,\n  selectedOption: option,\n  isOptionSelected: true,\n  selectedOptionClass: state.questions[state.current_Question_Index].correctAnswer === option ? 'correct-answer' : 'incorrect-answer',\n  correctAnswerClass: 'correct-answer'\n})), on(QuizActions.nextQuestion, state => {\n  const nextIndex = state.current_Question_Index + 1;\n  const newState = {\n    ...state,\n    current_Question_Index: nextIndex,\n    currentQuestion: state.questions[nextIndex].question,\n    options: state.questions[nextIndex].options\n  };\n  return newState;\n}), on(QuizActions.restartQuiz, () => initialState));","map":{"version":3,"mappings":"AACA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAE/C,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AAIjD,OAAO,MAAMC,oBAAoB,GAAG,SAAS;AAE7C,OAAO,MAAMC,YAAY,GAAS;EAChCC,cAAc,EAAE,CAAC;EACjBC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,EAAE;EACnBC,sBAAsB,EAAE;CACzB;AAED,OAAO,MAAMC,cAAc,GAAGZ,aAAa,CACzCI,YAAY,EACZH,EAAE,CAACC,WAAW,CAACW,oBAAoB,EAAE,CAACC,KAAK,EAAE;EAAEN;AAAS,CAAE,MAAM;EAC9D,GAAGM,KAAK;EACRN;CACD,CAAC,CAAC,EAEHP,EAAE,CAACC,WAAW,CAACa,YAAY,EAAE,CAACD,KAAK,EAAE;EAAEE;AAAM,CAAE,MAAM;EACnD,GAAGF,KAAK;EACRG,cAAc,EAAED,MAAM;EACtBE,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EACjBL,KAAK,CAACN,SAAS,CAACM,KAAK,CAACH,sBAAsB,CAAC,CAACS,aAAa,KAAKJ,MAAM,GAClE,gBAAgB,GAChB,kBAAkB;EACxBK,kBAAkB,EAAE;CACrB,CAAC,CAAC,EAEHpB,EAAE,CAACC,WAAW,CAACoB,YAAY,EAAGR,KAAK,IAAI;EACrC,MAAMS,SAAS,GAAGT,KAAK,CAACH,sBAAsB,GAAG,CAAC;EAElD,MAAMa,QAAQ,GAAG;IACf,GAAGV,KAAK;IACRH,sBAAsB,EAAEY,SAAS;IACjCb,eAAe,EAAEI,KAAK,CAACN,SAAS,CAACe,SAAS,CAAC,CAACE,QAAQ;IACpDhB,OAAO,EAAEK,KAAK,CAACN,SAAS,CAACe,SAAS,CAAC,CAACd;GACrC;EACD,OAAOe,QAAQ;AACjB,CAAC,CAAC,EAEFvB,EAAE,CAACC,WAAW,CAACwB,WAAW,EAAE,MAAMtB,YAAY,CAAC,CAChD","names":["createReducer","on","QuizActions","QUIZ_APP_FEATURE_KEY","initialState","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","quizAppReducer","loadQuestionsSuccess","state","selectOption","option","selectedOption","isOptionSelected","selectedOptionClass","correctAnswer","correctAnswerClass","nextQuestion","nextIndex","newState","question","restartQuiz"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.reducer.ts"],"sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as QuizActions from './quiz-app.actions';\nimport { QuizAppEntity } from './quiz-app.models';\nimport { Quiz } from '../quiz/quiz.interface';\n\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\n\nexport const initialState: Quiz = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n};\n\nexport const quizAppReducer = createReducer(\n  initialState,\n  on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n    ...state,\n    questions,\n  })),\n\n  on(QuizActions.selectOption, (state, { option }) => ({\n    ...state,\n    selectedOption: option,\n    isOptionSelected: true,\n    selectedOptionClass:\n      state.questions[state.current_Question_Index].correctAnswer === option\n        ? 'correct-answer'\n        : 'incorrect-answer',\n    correctAnswerClass: 'correct-answer',\n  })),\n\n  on(QuizActions.nextQuestion, (state) => {\n    const nextIndex = state.current_Question_Index + 1;\n\n    const newState = {\n      ...state,\n      current_Question_Index: nextIndex,\n      currentQuestion: state.questions[nextIndex].question,\n      options: state.questions[nextIndex].options,\n    };\n    return newState;\n  }),\n\n  on(QuizActions.restartQuiz, () => initialState)\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}