{"ast":null,"code":"import { Actions } from '@ngrx/effects';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { Store } from '@ngrx/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../quiz-redux.service\";\nimport * as i3 from \"@ngrx/store\";\nexport class QuizAppEffects {\n  constructor(actions$, triviaService, store) {\n    this.actions$ = actions$;\n    this.triviaService = triviaService;\n    this.store = store;\n  }\n  static #_ = this.ɵfac = function QuizAppEffects_Factory(t) {\n    return new (t || QuizAppEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.QuizReduxService), i0.ɵɵinject(i3.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizAppEffects,\n    factory: QuizAppEffects.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuBA,OAAO,QAAgB,eAAe;AAa7D,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,SAASC,KAAK,QAAgB,aAAa;;;;;AAO3C,OAAM,MAAOC,cAAc;EACzBC,YACUC,QAAiB,EACjBC,aAA+B,EAC/BC,KAAY;IAFZ,aAAQ,GAARF,QAAQ;IACR,kBAAa,GAAbC,aAAa;IACb,UAAK,GAALC,KAAK;EACZ;EAAC;qBALOJ,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAK,SAAdL,cAAc;EAAA","names":["Actions","QuizReduxService","Store","QuizAppEffects","constructor","actions$","triviaService","store","factory"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.effects.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport {\n  switchMap,\n  catchError,\n  of,\n  map,\n  mergeMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs';\nimport { QuizActions } from './quiz-app.actions';\nimport { QuizApiActions } from './quiz-app.actions';\nimport * as QuizAppFeature from './quiz-app.reducer';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { Question } from '../quiz/quiz.interface';\nimport { Store, select } from '@ngrx/store';\nimport {\n  selectSelectedCategory,\n  selectSelectedDifficulty,\n} from './quiz-app.selectors';\n\n@Injectable()\nexport class QuizAppEffects {\n  constructor(\n    private actions$: Actions,\n    private triviaService: QuizReduxService,\n    private store: Store\n  ) {}\n\n  // loadTrivia$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(QuizActions.loadQuestions),\n  //     mergeMap(() =>\n  //       this.triviaService.getTriviaQuestion().pipe(\n  //         map((questions: any) => {\n  //           console.log('Trivia questions received from Effects:', questions);\n  //           return QuizApiActions.loadQuestionsSuccess({ questions });\n  //         }),\n  //         catchError((error) => {\n  //           console.error('Error in loadTodos effect:', error);\n  //           return of(QuizApiActions.loadQuestionsFailure({ error }));\n  //         })\n  //       )\n  //     )\n  //   )\n  // );\n\n  // loadCategories$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(QuizActions.loadCategories),\n  //     tap(),\n  //     switchMap(() =>\n  //       this.triviaService.getcategories().pipe(\n  //         map((categories) => {\n  //           // console.log('Trivia categories received from Effects:', categories);\n  //           return QuizApiActions.loadCategoriesSuccess({ categories });\n  //         }),\n  //         catchError((error) =>\n  //           of(QuizApiActions.loadCategoriesFailure({ error }))\n  //         )\n  //       )\n  //     )\n  //   )\n  // );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}