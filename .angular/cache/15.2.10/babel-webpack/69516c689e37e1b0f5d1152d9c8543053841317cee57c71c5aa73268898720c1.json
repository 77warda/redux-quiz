{"ast":null,"code":"import { QuizReduxService } from '../quiz-redux.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz-redux.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"selected-option\": a0,\n    \"correct-answer\": a1,\n    \"incorrect-answer\": a2\n  };\n};\nfunction QuizComponent_div_2_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_2_button_11_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const option_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.selectOption(option_r2));\n    })(\"click\", function QuizComponent_div_2_button_11_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const option_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.selectOption(option_r2));\n    });\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx_r1.selectedOption === option_r2, ctx_r1.isCorrectAnswer(option_r2) && ctx_r1.selectedOption === option_r2, !ctx_r1.isCorrectAnswer(option_r2) && ctx_r1.selectedOption === option_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\nfunction QuizComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"p\", 5);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 6);\n    i0.ɵɵtemplate(11, QuizComponent_div_2_button_11_Template, 4, 7, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 8)(13, \"button\", 9);\n    i0.ɵɵtext(14, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_2_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.nextQuestion());\n    });\n    i0.ɵɵtext(16, \" Next \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quizText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.state.current_Question_Index + 1, \"/\", ctx_r0.state.questions.length, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Score: \", ctx_r0.state.current_score, \"/\", ctx_r0.state.total_score, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.state.currentQuestion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.state.options);\n  }\n}\nexport class QuizComponent {\n  constructor(triviaService) {\n    this.triviaService = triviaService;\n    // \"category\": \"Society & Culture\",\n    //       \"id\": \"626288684b176d54800e3d9a\",\n    //       \"correctAnswer\": \"BMW\",\n    //       \"incorrectAnswers\": [\n    //           \"Harley Davidson\",\n    //           \"Mercedez-Benz\",\n    //           \"Porsche\"\n    //       ],\n    //       \"question\": \"Which motoring brand is associated with the marketing slogan 'The Ultimate Driving Machine'?\",\n    //       \"tags\": [\n    //           \"business\",\n    //           \"marketing\",\n    //           \"motoring\",\n    //           \"society_and_culture\"\n    //       ],\n    //       \"type\": \"Multiple Choice\",\n    //       \"difficulty\": \"medium\",\n    //       \"regions\": [],\n    //       \"isNiche\": false\n    this.state = {\n      totalQuestions: 0,\n      current_score: 0,\n      total_score: 0,\n      questions: [],\n      options: [],\n      currentQuestion: '',\n      current_Question_Index: 0\n    };\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  ngOnInit() {\n    this.fetchTriviaQuestion();\n  }\n  fetchTriviaQuestion() {\n    this.triviaService.getTriviaQuestion().subscribe(triviaResponse => {\n      if (triviaResponse) {\n        this.state.totalQuestions = triviaResponse.length;\n        this.state.total_score = triviaResponse.length;\n        this.state.questions = triviaResponse.map(questionItem => {\n          const incorrectAnswers = questionItem.incorrectAnswers;\n          const correctAnswer = questionItem.correctAnswer;\n          return {\n            question: questionItem.question.text,\n            options: [...incorrectAnswers, correctAnswer]\n          };\n        });\n        // Set the initial question\n        this.setCurrentQuestion(0);\n      } else {\n        console.error('Invalid response structure');\n      }\n    });\n  }\n  setCurrentQuestion(index) {\n    if (index >= 0 && index < this.state.totalQuestions) {\n      this.quizText = 'Redux Angular Quiz';\n      this.state.current_Question_Index = index;\n      this.state.currentQuestion = this.state.questions[index].question;\n      this.state.options = this.state.questions[index].options;\n    } else {\n      this.quizText = 'Quiz Finished';\n      this.state.currentQuestion = '';\n      this.state.options = [];\n    }\n  }\n  nextQuestion() {\n    const nextIndex = this.state.current_Question_Index + 1;\n    this.setCurrentQuestion(nextIndex);\n  }\n  isCorrectAnswer(option) {\n    const optionsArray = this.state.questions[this.state.current_Question_Index].options;\n    const correctAnswer = optionsArray.find(o => o === option);\n    // Log the string value of the last element in the options array\n    // console.log('Last option:', optionsArray[optionsArray.length - 1]);\n    return correctAnswer !== undefined;\n  }\n  // Function to handle option selection\n  selectOption(option) {\n    if (!this.selectedOption) {\n      // Allow selecting an option only if no option is selected yet\n      this.selectedOption = option;\n      // Check if the selected option is correct\n      const isCorrect = this.isCorrectAnswer(option);\n      // Log the selected option and correctness to the console\n      console.log('Selected option:', option);\n      console.log('Is correct:', isCorrect);\n      // Update the score based on correctness\n      if (isCorrect) {\n        this.state.current_score++;\n      }\n      // Set the class for the selected option\n      this.selectedOptionClass = isCorrect ? 'correct-answer' : 'incorrect-answer';\n      // Set the class for the correct answer\n      this.correctAnswerClass = 'correct-answer';\n    }\n  }\n  static #_ = this.ɵfac = function QuizComponent_Factory(t) {\n    return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.QuizReduxService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuizComponent,\n    selectors: [[\"quiz-app-quiz\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[\"id\", \"section-1\", 1, \"section-1\"], [4, \"ngIf\"], [1, \"text-container\"], [1, \"flex\"], [1, \"score-text\"], [1, \"question-style\"], [1, \"quiz-options\"], [\"class\", \"option-btn\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn-flex\"], [\"id\", \"cancel-btn\", \"type\", \"submit\", 1, \"cancel-btn\"], [\"id\", \"btn\", \"type\", \"submit\", 1, \"next-btn\", 3, \"click\"], [1, \"option-btn\", 3, \"ngClass\", \"click\"], [1, \"alphabet\"]],\n    template: function QuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"main\");\n        i0.ɵɵtemplate(2, QuizComponent_div_2_Template, 17, 7, \"div\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state.current_Question_Index <= ctx.state.totalQuestions - 1);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  font-family: Arial, Helvetica, sans-serif;\\n  color: #fff;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  background: linear-gradient(to right, #3f2b96, #a8c0ff);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%] {\\n  background: rgba(217, 214, 228, 0.12);\\n  border-radius: 10px;\\n  padding: 40px;\\n  width: 26rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 1rem auto;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin: 1.4rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .question-style[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  font-size: 18px;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%] {\\n  margin: 15px 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  border-radius: 5px;\\n  background: #eee;\\n  margin-bottom: 15px;\\n  padding: 6px 0;\\n  position: relative;\\n  width: 100%;\\n  color: #000;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .alphabet[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n  border: solid 1px #000;\\n  padding: 0.4rem 0.5rem 0.4rem;\\n  width: 2.3rem;\\n  margin: 0 1.3rem 0 0.7rem;\\n  display: flex;\\n  justify-content: center;\\n  color: #000;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   .alphabet[_ngcontent-%COMP%] {\\n  background: #000;\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin: 2rem 0 0.3rem 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%], section[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .cancel-btn[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%] {\\n  background: rgb(0, 24, 130);\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(0, 24, 130, 0.752);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .cancel-btn[_ngcontent-%COMP%] {\\n  background: #fff;\\n  color: rgb(0, 24, 130);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .cancel-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.671);\\n  color: rgba(0, 0, 0, 0.749);\\n}\\n\\n.selected-option[_ngcontent-%COMP%] {\\n  background-color: #2196F3 !important;\\n}\\n\\n.correct-answer[_ngcontent-%COMP%] {\\n  background-color: #4CAF50 !important;\\n}\\n\\n.incorrect-answer[_ngcontent-%COMP%] {\\n  background-color: #F44336 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["QuizReduxService","i0","QuizComponent","constructor","triviaService","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","ngOnInit","fetchTriviaQuestion","getTriviaQuestion","subscribe","triviaResponse","state","length","map","questionItem","incorrectAnswers","correctAnswer","question","text","setCurrentQuestion","console","error","index","quizText","nextQuestion","nextIndex","isCorrectAnswer","option","optionsArray","find","o","undefined","selectOption","selectedOption","isCorrect","log","selectedOptionClass","correctAnswerClass","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz/quiz.component.ts","/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz/quiz.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Quiz } from './quiz.interface';\nimport { QuizReduxService } from '../quiz-redux.service';\n\n@Component({\n  selector: 'quiz-app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss'],\n})\nexport class QuizComponent implements OnInit {\n  // \"category\": \"Society & Culture\",\n  //       \"id\": \"626288684b176d54800e3d9a\",\n  //       \"correctAnswer\": \"BMW\",\n  //       \"incorrectAnswers\": [\n  //           \"Harley Davidson\",\n  //           \"Mercedez-Benz\",\n  //           \"Porsche\"\n  //       ],\n  //       \"question\": \"Which motoring brand is associated with the marketing slogan 'The Ultimate Driving Machine'?\",\n  //       \"tags\": [\n  //           \"business\",\n  //           \"marketing\",\n  //           \"motoring\",\n  //           \"society_and_culture\"\n  //       ],\n  //       \"type\": \"Multiple Choice\",\n  //       \"difficulty\": \"medium\",\n  //       \"regions\": [],\n  //       \"isNiche\": false\n  state: Quiz = {\n    totalQuestions: 0,\n    current_score: 0,\n    total_score: 0,\n    questions: [],\n    options: [],\n    currentQuestion: '',\n    current_Question_Index: 0,\n  };\n  quizText!: string;\n  selectedOption: string | null = null;\n  selectedOptionClass: string | null = null;\n  correctAnswerClass: string | null = null;\n  constructor(private triviaService: QuizReduxService) {}\n\n  ngOnInit(): void {\n    this.fetchTriviaQuestion();\n  }\n\n  fetchTriviaQuestion() {\n    this.triviaService.getTriviaQuestion().subscribe((triviaResponse: any) => {\n      if (triviaResponse) {\n        this.state.totalQuestions = triviaResponse.length;\n        this.state.total_score = triviaResponse.length;\n\n        this.state.questions = triviaResponse.map((questionItem: any) => {\n          const incorrectAnswers = questionItem.incorrectAnswers;\n          const correctAnswer = questionItem.correctAnswer;\n\n          return {\n            question: questionItem.question.text,\n            options: [...incorrectAnswers, correctAnswer],\n          };\n        });\n\n        // Set the initial question\n        this.setCurrentQuestion(0);\n      } else {\n        console.error('Invalid response structure');\n      }\n    });\n  }\n  setCurrentQuestion(index: number) {\n    if (index >= 0 && index < this.state.totalQuestions) {\n      this.quizText = 'Redux Angular Quiz';\n      this.state.current_Question_Index = index;\n      this.state.currentQuestion = this.state.questions[index].question;\n      this.state.options = this.state.questions[index].options;\n    } else {\n      this.quizText = 'Quiz Finished';\n      this.state.currentQuestion = '';\n      this.state.options = [];\n    }\n  }\n\n  nextQuestion() {\n    const nextIndex = this.state.current_Question_Index + 1;\n    this.setCurrentQuestion(nextIndex);\n  }\n  isCorrectAnswer(option: string): boolean {\n    const optionsArray =\n      this.state.questions[this.state.current_Question_Index].options;\n    const correctAnswer = optionsArray.find((o) => o === option);\n\n    // Log the string value of the last element in the options array\n    // console.log('Last option:', optionsArray[optionsArray.length - 1]);\n\n    return correctAnswer !== undefined;\n  }\n\n  // Function to handle option selection\n  selectOption(option: string) {\n    if (!this.selectedOption) {\n      // Allow selecting an option only if no option is selected yet\n      this.selectedOption = option;\n\n      // Check if the selected option is correct\n      const isCorrect = this.isCorrectAnswer(option);\n\n      // Log the selected option and correctness to the console\n      console.log('Selected option:', option);\n      console.log('Is correct:', isCorrect);\n\n      // Update the score based on correctness\n      if (isCorrect) {\n        this.state.current_score++;\n      }\n\n      // Set the class for the selected option\n      this.selectedOptionClass = isCorrect\n        ? 'correct-answer'\n        : 'incorrect-answer';\n\n      // Set the class for the correct answer\n      this.correctAnswerClass = 'correct-answer';\n    }\n  }\n}\n","<!-- QUIZ ONE -->\n<section class=\"section-1\" id=\"section-1\">\n  <main>\n    <div *ngIf=\"state.current_Question_Index <= state.totalQuestions - 1\">\n      <h3 class=\"text-container\">{{ quizText }}</h3>\n      <div class=\"flex\">\n        <p>\n          {{ state.current_Question_Index + 1 }}/{{ state.questions.length }}\n        </p>\n        <p class=\"score-text\">\n          Score: {{ state.current_score }}/{{ state.total_score }}\n        </p>\n      </div>\n      <p class=\"question-style\">{{ state.currentQuestion }}</p>\n      <div class=\"quiz-options\">\n        <button\n          class=\"option-btn\"\n          *ngFor=\"let option of state.options; let i = index\"\n          [ngClass]=\"{\n            'selected-option': selectedOption === option,\n            'correct-answer':\n              isCorrectAnswer(option) && selectedOption === option,\n            'incorrect-answer':\n              !isCorrectAnswer(option) && selectedOption === option\n          }\"\n          (click)=\"selectOption(option)\"\n          (click)=\"selectOption(option)\"\n        >\n          <span class=\"alphabet\">{{ i + 1 }}</span>\n          {{ option }}\n        </button>\n      </div>\n      <div class=\"btn-flex\">\n        <button class=\"cancel-btn\" id=\"cancel-btn\" type=\"submit\">Cancel</button>\n        <button\n          class=\"next-btn\"\n          id=\"btn\"\n          type=\"submit\"\n          (click)=\"nextQuestion()\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  </main>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}