{"ast":null,"code":"import { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of, map } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../quiz-redux.service\";\nexport class QuizAppEffects {\n  constructor(actions$, triviaService // Inject your trivia service\n  ) {\n    this.actions$ = actions$;\n    this.triviaService = triviaService;\n    this.loadQuestions$ = createEffect(() => this.actions$.pipe(ofType(QuizAppActions.loadQuestionsSuccess), switchMap(() => this.triviaService.getTriviaQuestion().pipe(map(questions => QuizAppActions.loadQuestionsSuccess({\n      questions\n    })), catchError(error => of(QuizAppActions.loadQuestionsFailure({\n      error\n    })))))));\n  }\n  static #_ = this.ɵfac = function QuizAppEffects_Factory(t) {\n    return new (t || QuizAppEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.QuizReduxService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizAppEffects,\n    factory: QuizAppEffects.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,SAAS,EAAEC,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;AACrD,OAAO,KAAKC,cAAc,MAAM,oBAAoB;AAEpD,SAASC,gBAAgB,QAAQ,uBAAuB;;;;AAIxD,OAAM,MAAOC,cAAc;EACzBC,YACUC,QAAiB,EACjBC,aAA+B,CAAC;EAAA;IADhC,aAAQ,GAARD,QAAQ;IACR,kBAAa,GAAbC,aAAa;IAEvB,mBAAc,GAAGZ,YAAY,CAAC,MAC5B,IAAI,CAACW,QAAQ,CAACE,IAAI,CAChBX,MAAM,CAACK,cAAc,CAACO,oBAAoB,CAAC,EAC3CX,SAAS,CAAC,MACR,IAAI,CAACS,aAAa,CAACG,iBAAiB,EAAE,CAACF,IAAI,CACzCP,GAAG,CAAEU,SAAS,IACZT,cAAc,CAACO,oBAAoB,CAAC;MAAEE;IAAS,CAAE,CAAC,CACnD,EACDZ,UAAU,CAAEa,KAAK,IACfZ,EAAE,CAACE,cAAc,CAACW,oBAAoB,CAAC;MAAED;IAAK,CAAE,CAAC,CAAC,CACnD,CACF,CACF,CACF,CACF;EAfE;EAAC;qBAJOR,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAU,SAAdV,cAAc;EAAA","names":["createEffect","Actions","ofType","switchMap","catchError","of","map","QuizAppActions","QuizReduxService","QuizAppEffects","constructor","actions$","triviaService","pipe","loadQuestionsSuccess","getTriviaQuestion","questions","error","loadQuestionsFailure","factory"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.effects.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of, map } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport * as QuizAppFeature from './quiz-app.reducer';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { Question } from '../quiz/quiz.interface';\n\n@Injectable()\nexport class QuizAppEffects {\n  constructor(\n    private actions$: Actions,\n    private triviaService: QuizReduxService // Inject your trivia service\n  ) {}\n  loadQuestions$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(QuizAppActions.loadQuestionsSuccess),\n      switchMap(() =>\n        this.triviaService.getTriviaQuestion().pipe(\n          map((questions) =>\n            QuizAppActions.loadQuestionsSuccess({ questions })\n          ),\n          catchError((error) =>\n            of(QuizAppActions.loadQuestionsFailure({ error }))\n          )\n        )\n      )\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}