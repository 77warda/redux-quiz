{"ast":null,"code":"import { Question } from './quiz.interface';\nimport { Store, select } from '@ngrx/store';\nimport * as QuizActions from '../+state/quiz-app.actions';\nimport { Observable, map } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { selectCorrectAnswer, selectCurrentQuestion, selectCurrentQuestionIndex, selectCurrentScore, selectTotalQuestions } from '../+state/quiz-app.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"selected-option\": a0,\n    \"correct-answer\": a1\n  };\n};\nfunction QuizComponent_div_3_div_1_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_3_div_1_button_15_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const option_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.selectOption(option_r6));\n    });\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r5.selectedOption === option_r6, ctx_r5.correctAnswerClass === \"correct-answer\" && ctx_r5.isCorrectAnswer(option_r6)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r7 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6, \" \");\n  }\n}\nfunction QuizComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 3);\n    i0.ɵɵtext(2, \"Redux Angular Quiz\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"async\");\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\", 5);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 6);\n    i0.ɵɵtemplate(15, QuizComponent_div_3_div_1_button_15_Template, 4, 6, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 8)(17, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_3_div_1_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.previousQuestion());\n    });\n    i0.ɵɵpipe(18, \"async\");\n    i0.ɵɵtext(19, \" Previous \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function QuizComponent_div_3_div_1_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.nextQuestion());\n    });\n    i0.ɵɵtext(21, \" Next \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r3 = i0.ɵɵnextContext().ngIf;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(6, 8, ctx_r4.currentQuestionIndex$), \"/\", i0.ɵɵpipeBind1(7, 10, ctx_r4.totalQuestions$), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" Score: \", i0.ɵɵpipeBind1(10, 12, ctx_r4.currentScore$), \"/\", i0.ɵɵpipeBind1(11, 14, ctx_r4.totalQuestions$), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r3.currentQuestion.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", data_r3.currentQuestion.options);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(18, 16, ctx_r4.isFirstQuestion$));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.isOptionSelected);\n  }\n}\nfunction QuizComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, QuizComponent_div_3_div_1_Template, 22, 18, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", data_r3.currentQuestion);\n  }\n}\nfunction QuizComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Quiz finished\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    currentQuestion: a0,\n    totalQuestions: a1\n  };\n};\nexport class QuizComponent {\n  // state: Quiz = {\n  //   totalQuestions: 0,\n  //   current_score: 0,\n  //   total_score: 0,\n  //   questions: [],\n  //   options: [],\n  //   currentQuestion: '',\n  //   current_Question_Index: 0,\n  // };\n  constructor(store, router) {\n    this.store = store;\n    this.router = router;\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  ngOnInit() {\n    this.restartQuiz();\n    this.store.dispatch(QuizActions.loadQuestions());\n    this.currentQuestionIndex$ = this.store.pipe(select(selectCurrentQuestionIndex), map(index => index + 1));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.currentQuestion$ = this.store.pipe(select(selectCurrentQuestion));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.correctAnswer$ = this.store.pipe(select(selectCorrectAnswer));\n    this.currentScore$ = this.store.pipe(select(selectCurrentScore));\n    // for previous question\n    this.isFirstQuestion$ = this.currentQuestionIndex$.pipe(map(index => index === 1));\n    //this is only to show in console and otherwise not working at all\n    this.correctAnswer$.subscribe(correctAnswer => console.log('Correct Answer:', correctAnswer));\n    this.currentQuestionIndex$.subscribe(index => {\n      console.log('Current Question Index:', index);\n    });\n  }\n  restartQuiz() {\n    // this.fetchTriviaQuestion();\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  shuffleArray(array) {\n    return array.sort(() => Math.random() - 0.6);\n  }\n  setCurrentQuestion(index) {\n    this.quizText = 'Redux Angular Quiz';\n    this.store.dispatch(QuizActions.setCurrentQuestionIndex({\n      index\n    }));\n  }\n  nextQuestion() {\n    this.store.dispatch(QuizActions.nextQuestion());\n    // reset styling\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n    this.isOptionSelected = false;\n  }\n  previousQuestion() {\n    this.store.dispatch(QuizActions.previousQuestion());\n  }\n  isCorrectAnswer(option) {\n    let correctAnswer;\n    this.store.pipe(select(selectCurrentQuestion)).subscribe(currentQuestion => {\n      if (currentQuestion) {\n        correctAnswer = currentQuestion.correctAnswer;\n      }\n    });\n    return !!correctAnswer && correctAnswer === option;\n  }\n  // Function to handle option selection\n  selectOption(option) {\n    if (!this.selectedOption) {\n      this.selectedOption = option;\n      const isCorrect = this.isCorrectAnswer(option);\n      this.store.dispatch(QuizActions.selectOption({\n        option,\n        isCorrect\n      }));\n      if (isCorrect) {\n        this.store.dispatch(QuizActions.updateScore({\n          score: 1\n        }));\n      }\n      this.selectedOptionClass = isCorrect ? 'correct-answer' : 'incorrect-answer';\n      this.correctAnswerClass = 'correct-answer';\n      this.isOptionSelected = true;\n    }\n  }\n  static #_ = this.ɵfac = function QuizComponent_Factory(t) {\n    return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuizComponent,\n    selectors: [[\"quiz-app-quiz\"]],\n    decls: 8,\n    vars: 8,\n    consts: [[\"id\", \"section-1\", 1, \"section-1\"], [4, \"ngIf\"], [\"quizFinished\", \"\"], [1, \"text-container\"], [1, \"flex\"], [1, \"question-style\"], [1, \"quiz-options\"], [\"class\", \"option-btn\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn-flex\"], [1, \"next-btn\", 3, \"disabled\", \"click\"], [1, \"option-btn\", 3, \"ngClass\", \"click\"], [1, \"alphabet\"]],\n    template: function QuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"main\");\n        i0.ɵɵelementContainerStart(2);\n        i0.ɵɵtemplate(3, QuizComponent_div_3_Template, 2, 1, \"div\", 1);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(6, QuizComponent_ng_template_6_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction2(5, _c1, i0.ɵɵpipeBind1(4, 1, ctx.currentQuestion$), i0.ɵɵpipeBind1(5, 3, ctx.totalQuestions$)));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  font-family: Arial, Helvetica, sans-serif;\\n  color: #fff;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  background: #a8c0ff;\\n  background: linear-gradient(to right, #3f2b96, #a8c0ff);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%] {\\n  background: rgba(217, 214, 228, 0.12);\\n  border-radius: 10px;\\n  padding: 40px;\\n  width: 26rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 1rem auto;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin: 1.4rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .question-style[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  font-size: 18px;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%] {\\n  margin: 15px 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  border-radius: 5px;\\n  background: #eee;\\n  margin-bottom: 15px;\\n  padding: 6px 0;\\n  position: relative;\\n  width: 100%;\\n  color: #000;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  text-align: left;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .alphabet[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n  border: solid 1px #000;\\n  padding: 0.4rem 0.5rem 0.4rem;\\n  width: 2.3rem;\\n  margin: 0 1.3rem 0 0.7rem;\\n  display: flex;\\n  justify-content: center;\\n  color: #000;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   .alphabet[_ngcontent-%COMP%] {\\n  background: #000;\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-options[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed !important;\\n  opacity: 0.9;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin: 2rem 0 0.3rem 0;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%], section[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%] {\\n  background: rgb(0, 24, 130);\\n  color: #fff;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%]:disabled {\\n  cursor: not-allowed !important;\\n  opacity: 0.6;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%] {\\n  background: #fff;\\n  color: rgb(0, 24, 130);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .btn-flex[_ngcontent-%COMP%]   .skip-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.671);\\n  color: rgba(0, 0, 0, 0.749);\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: auto;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], section[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  padding: 0.4rem 0.9rem;\\n}\\nsection[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .quiz-finished[_ngcontent-%COMP%]   .next-btn[_ngcontent-%COMP%] {\\n  border-radius: 30px;\\n  font-size: 1.1rem;\\n  font-weight: 600;\\n  width: 10rem;\\n  margin: 0 auto;\\n  outline: none;\\n  padding: 11px 0;\\n  text-align: center;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  background: rgb(0, 24, 130);\\n  color: #fff;\\n}\\n\\n.selected-option[_ngcontent-%COMP%] {\\n  background-color: #F44336 !important;\\n}\\n\\n.correct-answer[_ngcontent-%COMP%] {\\n  background-color: #4CAF50 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvcXVpei1yZWR1eC1hcHAvc3JjL2FwcC9xdWl6L3F1aXouY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLHlDQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUVBLHVEQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FBQ0o7QUFDSTtFQUNJLHFDQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQUNSO0FBQ1E7RUFDSSxrQkFBQTtFQUNBLGlCQUFBO0FBQ1o7QUFFUTtFQUNJLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUFaO0FBS1E7RUFDSSxnQkFBQTtFQUNBLGVBQUE7QUFIWjtBQU1RO0VBQ0ksY0FBQTtBQUpaO0FBTVk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FBSmhCO0FBTWdCO0VBQ0ksa0JBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsV0FBQTtBQUpwQjtBQVFvQjtFQUNJLGdCQUFBO0VBQ0EsV0FBQTtBQU54QjtBQVVnQjtFQUNJLDhCQUFBO0VBQ0EsWUFBQTtBQVJwQjtBQWVRO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSx1QkFBQTtBQWJaO0FBZVk7O0VBRUksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FBYmhCO0FBZ0JZO0VBQ0ksMkJBQUE7RUFDQSxXQUFBO0FBZGhCO0FBZ0JnQjtFQUNJLDhCQUFBO0VBQ0EsWUFBQTtBQWRwQjtBQWtCWTtFQUNJLGdCQUFBO0VBQ0Esc0JBQUE7QUFoQmhCO0FBa0JnQjtFQUNJLHNDQUFBO0VBQ0EsMkJBQUE7QUFoQnBCO0FBcUJRO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0FBbkJaO0FBcUJZOztFQUVJLHNCQUFBO0FBbkJoQjtBQXNCWTtFQUNJLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDJCQUFBO0VBQ0EsV0FBQTtBQXBCaEI7O0FBNEJBO0VBQ0ksb0NBQUE7QUF6Qko7O0FBNEJBO0VBQ0ksb0NBQUE7QUF6QkoiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiAjYThjMGZmO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG5hIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG59XG5cbnNlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICNhOGMwZmY7XG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMzZjJiOTYsICNhOGMwZmYpO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzNmMmI5NiwgI2E4YzBmZik7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICBtYWluIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMTcsIDIxNCwgMjI4LCAwLjEyKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgcGFkZGluZzogNDBweDtcbiAgICAgICAgd2lkdGg6IDI2cmVtO1xuXG4gICAgICAgIC50ZXh0LWNvbnRhaW5lciB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW0gYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgIC5mbGV4IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luOiAxLjRyZW07XG5cbiAgICAgICAgICAgIC5zY29yZS10ZXh0IHt9XG4gICAgICAgIH1cblxuICAgICAgICAucXVlc3Rpb24tc3R5bGUge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5xdWl6LW9wdGlvbnMge1xuICAgICAgICAgICAgbWFyZ2luOiAxNXB4IDA7XG5cbiAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogNnB4IDA7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICAgICAgICAgICAgLmFscGhhYmV0IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IHNvbGlkIDFweCAjMDAwO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNHJlbSAuNXJlbSAuNHJlbTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIuM3JlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDEuM3JlbSAwIC43cmVtO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIC5hbHBoYWJldCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4tZmxleCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICBtYXJnaW46IDJyZW0gMCAwLjNyZW0gMDtcblxuICAgICAgICAgICAgLm5leHQtYnRuLFxuICAgICAgICAgICAgLnNraXAtYnRuIHtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwcmVtO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTFweCAwO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5uZXh0LWJ0biB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiKDAsIDI0LCAxMzApO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuXG4gICAgICAgICAgICAgICAgJjpkaXNhYmxlZCB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnNraXAtYnRuIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2IoMCwgMjQsIDEzMCk7XG5cbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY3MSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzQ5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAucXVpei1maW5pc2hlZCB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XG5cbiAgICAgICAgICAgIGgxLFxuICAgICAgICAgICAgaDMge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAuNHJlbSAwLjlyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5uZXh0LWJ0biB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMHJlbTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDExcHggMDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigwLCAyNCwgMTMwKTtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG5cbi5zZWxlY3RlZC1vcHRpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNDQzMzYgIWltcG9ydGFudDsgLy8gQmx1ZSBiYWNrZ3JvdW5kIGZvciBzZWxlY3RlZCBvcHRpb25cbn1cblxuLmNvcnJlY3QtYW5zd2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwICFpbXBvcnRhbnQ7IC8vIEdyZWVuIGJhY2tncm91bmQgZm9yIHRoZSBjb3JyZWN0IGFuc3dlclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Question","Store","select","QuizActions","Observable","map","Router","selectCorrectAnswer","selectCurrentQuestion","selectCurrentQuestionIndex","selectCurrentScore","selectTotalQuestions","i0","QuizComponent","constructor","store","router","ngOnInit","restartQuiz","dispatch","loadQuestions","currentQuestionIndex$","pipe","index","totalQuestions$","currentQuestion$","correctAnswer$","currentScore$","isFirstQuestion$","subscribe","correctAnswer","console","log","isOptionSelected","selectedOption","selectedOptionClass","correctAnswerClass","shuffleArray","array","sort","Math","random","setCurrentQuestion","quizText","setCurrentQuestionIndex","nextQuestion","previousQuestion","isCorrectAnswer","option","currentQuestion","selectOption","isCorrect","updateScore","score","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/quiz/quiz.component.ts","/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/quiz/quiz.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Question, Quiz } from './quiz.interface';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport { Store, select } from '@ngrx/store';\nimport * as QuizActions from '../+state/quiz-app.actions';\nimport { quizAppReducer } from '../+state/quiz-app.reducer';\nimport { Observable, combineLatest, map, withLatestFrom } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {\n  selectCorrectAnswer,\n  selectCurrentQuestion,\n  selectCurrentQuestionIndex,\n  selectCurrentScore,\n  selectQuestions,\n  selectTotalQuestions,\n} from '../+state/quiz-app.selectors';\n\n@Component({\n  selector: 'quiz-app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss'],\n})\nexport class QuizComponent implements OnInit {\n  questions$!: Observable<Question[]>;\n  currentQuestionIndex$!: Observable<number | null>;\n  totalQuestions$!: Observable<number | null>;\n  currentQuestion$!: Observable<Question | undefined>;\n  correctAnswer$!: Observable<string>;\n  currentScore$!: Observable<number>;\n  isFirstQuestion$!: Observable<boolean>;\n  isLastQuestion$!: Observable<boolean>;\n  isOptionSelected = false;\n  quizText!: string;\n  selectedOption: string | null = null;\n  selectedOptionClass: string | null = null;\n  correctAnswerClass: string | null = null;\n  // state: Quiz = {\n  //   totalQuestions: 0,\n  //   current_score: 0,\n  //   total_score: 0,\n  //   questions: [],\n  //   options: [],\n  //   currentQuestion: '',\n  //   current_Question_Index: 0,\n  // };\n\n  constructor(private store: Store, private router: Router) {}\n\n  ngOnInit(): void {\n    this.restartQuiz();\n    this.store.dispatch(QuizActions.loadQuestions());\n    this.currentQuestionIndex$ = this.store.pipe(\n      select(selectCurrentQuestionIndex),\n      map((index) => index + 1)\n    );\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.currentQuestion$ = this.store.pipe(select(selectCurrentQuestion));\n    this.totalQuestions$ = this.store.pipe(select(selectTotalQuestions));\n    this.correctAnswer$ = this.store.pipe(select(selectCorrectAnswer));\n    this.currentScore$ = this.store.pipe(select(selectCurrentScore));\n    // for previous question\n    this.isFirstQuestion$ = this.currentQuestionIndex$.pipe(\n      map((index) => index === 1)\n    );\n\n    //this is only to show in console and otherwise not working at all\n    this.correctAnswer$.subscribe((correctAnswer) =>\n      console.log('Correct Answer:', correctAnswer)\n    );\n    this.currentQuestionIndex$.subscribe((index) => {\n      console.log('Current Question Index:', index);\n    });\n  }\n\n  restartQuiz() {\n    // this.fetchTriviaQuestion();\n    this.isOptionSelected = false;\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n  }\n  shuffleArray(array: string[]): string[] {\n    return array.sort(() => Math.random() - 0.6);\n  }\n\n  setCurrentQuestion(index: number) {\n    this.quizText = 'Redux Angular Quiz';\n    this.store.dispatch(QuizActions.setCurrentQuestionIndex({ index }));\n  }\n\n  nextQuestion() {\n    this.store.dispatch(QuizActions.nextQuestion());\n    // reset styling\n    this.selectedOption = null;\n    this.selectedOptionClass = null;\n    this.correctAnswerClass = null;\n    this.isOptionSelected = false;\n  }\n  previousQuestion() {\n    this.store.dispatch(QuizActions.previousQuestion());\n  }\n  isCorrectAnswer(option: string): boolean {\n    let correctAnswer: string | undefined;\n    this.store\n      .pipe(select(selectCurrentQuestion))\n      .subscribe((currentQuestion) => {\n        if (currentQuestion) {\n          correctAnswer = currentQuestion.correctAnswer;\n        }\n      });\n\n    return !!correctAnswer && correctAnswer === option;\n  }\n\n  // Function to handle option selection\n  selectOption(option: string) {\n    if (!this.selectedOption) {\n      this.selectedOption = option;\n      const isCorrect = this.isCorrectAnswer(option);\n      this.store.dispatch(QuizActions.selectOption({ option, isCorrect }));\n      if (isCorrect) {\n        this.store.dispatch(QuizActions.updateScore({ score: 1 }));\n      }\n\n      this.selectedOptionClass = isCorrect\n        ? 'correct-answer'\n        : 'incorrect-answer';\n      this.correctAnswerClass = 'correct-answer';\n      this.isOptionSelected = true;\n    }\n  }\n}\n","<!-- QUIZ ONE\n<section class=\"section-1\" id=\"section-1\">\n  <main>\n    <div\n      *ngIf=\"\n        state.current_Question_Index < state.totalQuestions;\n        else quizFinished\n      \"\n    >\n      <h3 class=\"text-container\">{{ quizText }}</h3>\n      <div class=\"flex\">\n        <p>\n          {{ state.current_Question_Index + 1 }}/{{ state.questions.length }}\n        </p>\n        <p class=\"score-text\">\n          Score: {{ state.current_score }}/{{ state.total_score }}\n        </p>\n      </div>\n      <p class=\"question-style\">{{ state.currentQuestion }}</p>\n      <div class=\"quiz-options\">\n        <button\n          class=\"option-btn\"\n          *ngFor=\"let option of state.options; let i = index\"\n          [ngClass]=\"{\n            'selected-option': selectedOption === option,\n            'correct-answer':\n              correctAnswerClass === 'correct-answer' && isCorrectAnswer(option)\n          }\"\n          (click)=\"selectOption(option)\"\n          [disabled]=\"isOptionSelected\"\n        >\n          <span class=\"alphabet\">{{ i + 1 }}</span>\n          {{ option }}\n        </button>\n      </div>\n      <div class=\"btn-flex\">\n        <button class=\"skip-btn\" id=\"skip-btn\" type=\"submit\">Skip</button>\n        <button\n          class=\"next-btn\"\n          id=\"btn\"\n          type=\"submit\"\n          (click)=\"nextQuestion()\"\n          [disabled]=\"!isOptionSelected\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n    <ng-template #quizFinished>\n      <div class=\"quiz-finished\">\n        <h1>Quiz Finished</h1>\n        <h3>You have attempted {{ state.questions.length }} Questions</h3>\n        <h3>Your Score is</h3>\n        <h3>{{ state.current_score }} out of {{ state.total_score }}</h3>\n        <button class=\"next-btn\" id=\"btn\" type=\"submit\" (click)=\"restartQuiz()\">\n          Restart Quiz\n        </button>\n      </div>\n    </ng-template>\n  </main>\n</section>\n -->\n\n<section class=\"section-1\" id=\"section-1\">\n  <main>\n    <ng-container>\n      <div\n        *ngIf=\"{\n          currentQuestion: currentQuestion$ | async,\n          totalQuestions: totalQuestions$ | async\n        } as data\"\n      >\n        <div *ngIf=\"data.currentQuestion\">\n          <h3 class=\"text-container\">Redux Angular Quiz</h3>\n          <div class=\"flex\">\n            <p>\n              {{ currentQuestionIndex$ | async }}/{{ totalQuestions$ | async }}\n            </p>\n            <p>\n              Score: {{ currentScore$ | async }}/{{ totalQuestions$ | async }}\n            </p>\n          </div>\n\n          <p class=\"question-style\">{{ data.currentQuestion.question }}</p>\n          <div class=\"quiz-options\">\n            <button\n              class=\"option-btn\"\n              [ngClass]=\"{\n                'selected-option': selectedOption === option,\n                'correct-answer':\n                  correctAnswerClass === 'correct-answer' &&\n                  isCorrectAnswer(option)\n              }\"\n              *ngFor=\"let option of data.currentQuestion.options; let i = index\"\n              (click)=\"selectOption(option)\"\n            >\n              <span class=\"alphabet\">{{ i + 1 }}</span>\n              {{ option }}\n            </button>\n          </div>\n          <div class=\"btn-flex\">\n            <button\n              class=\"next-btn\"\n              (click)=\"previousQuestion()\"\n              [disabled]=\"isFirstQuestion$ | async\"\n            >\n              Previous\n            </button>\n            <button\n              class=\"next-btn\"\n              (click)=\"nextQuestion()\"\n              [disabled]=\"!isOptionSelected\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-template #quizFinished>\n      <h1>Quiz finished</h1>\n      <!-- <quiz-app-quiz-finished\n        *ngIf=\"(isLastQuestion$ | async) === false\"\n      ></quiz-app-quiz-finished> -->\n    </ng-template>\n  </main>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}