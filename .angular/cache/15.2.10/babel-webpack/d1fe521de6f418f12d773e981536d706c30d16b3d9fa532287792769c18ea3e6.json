{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizReduxService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://the-trivia-api.com/api/questions';\n  }\n  getTriviaQuestion() {\n    const apiUrlWithKey = `${this.apiUrl}`;\n    return this.http.get(apiUrlWithKey).pipe(catchError(error => {\n      console.error('Error fetching trivia question:', error);\n      return throwError(error); // rethrow the error after logging\n    }));\n  }\n  static #_ = this.ɵfac = function QuizReduxService_Factory(t) {\n    return new (t || QuizReduxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizReduxService,\n    factory: QuizReduxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAMzD,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,0CAA0C;EAEpB;EAEvCC,iBAAiB;IACf,MAAMC,aAAa,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;IAEtC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAOF,aAAa,CAAC,CAACG,IAAI,CAC5CT,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAOT,UAAU,CAACS,KAAK,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH;EACH;EAAC;qBAdUR,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAU,SAAhBV,gBAAgB;IAAAW,YAFf;EAAM","names":["HttpClient","catchError","throwError","QuizReduxService","constructor","http","getTriviaQuestion","apiUrlWithKey","apiUrl","get","pipe","error","console","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/quiz-redux.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { Quiz } from './quiz/quiz.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizReduxService {\n  private apiUrl = 'https://the-trivia-api.com/api/questions';\n\n  constructor(private http: HttpClient) {}\n\n  getTriviaQuestion(): Observable<Quiz> {\n    const apiUrlWithKey = `${this.apiUrl}`;\n\n    return this.http.get<Quiz>(apiUrlWithKey).pipe(\n      catchError((error) => {\n        console.error('Error fetching trivia question:', error);\n        return throwError(error); // rethrow the error after logging\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}