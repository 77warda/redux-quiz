{"ast":null,"code":"// import { createAction, props } from '@ngrx/store';\n// import { QuizAppEntity } from './quiz-app.models';\n// import { Question } from '../quiz/quiz.interface';\n// export const loadQuestions = createAction('[Quiz] Load Questions');\n// export const loadQuestionsSuccess = createAction(\n//   '[Quiz] Load Questions Success',\n//   props<{ questions: Question[] }>()\n// );\n// export const loadQuestionsFailure = createAction(\n//   '[Quiz] Load Questions Failure',\n//   props<{ error: any }>()\n// );\n// export const setCurrentQuestionIndex = createAction(\n//   '[Quiz] Set Current Question Index',\n//   props<{ index: number }>()\n// );\n// export const selectOption = createAction(\n//   '[Quiz] Select Option',\n//   props<{ option: string; isCorrect: boolean }>()\n// );\n// export const nextQuestion = createAction('[Quiz] Next Question');\n// export const skipQuestion = createAction('[Quiz] Skip Question');\n// export const previousQuestion = createAction('[Quiz] Previous Question');\n// export const updateScore = createAction(\n//   '[Quiz] Update Score',\n//   props<{ score: number }>()\n// );\n// export const restartQuiz = createAction('[Quiz] Restart Quiz');\nimport { createActionGroup, emptyProps, props } from '@ngrx/store';\nexport const QuizActions = createActionGroup({\n  source: 'Quiz',\n  events: {\n    'Load Questions': emptyProps(),\n    'Load Questions Success': props(),\n    'Load Questions Failure': props(),\n    'Set Current Question Index': props(),\n    'Select Option': props(),\n    'Next Question': emptyProps(),\n    'Skip Question': emptyProps(),\n    'Previous Question': emptyProps(),\n    'Update Score': props(),\n    'Restart Quiz': emptyProps(),\n    'Load Categories': emptyProps(),\n    // 'Load Categories Success': props<{ categories }>(),\n    'Load Categories Failure': props()\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,iBAAiB,EAAEC,UAAU,EAAEC,KAAK,QAAQ,aAAa;AAGlE,OAAO,MAAMC,WAAW,GAAGH,iBAAiB,CAAC;EAC3CI,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE;IACN,gBAAgB,EAAEJ,UAAU,EAAE;IAE9B,wBAAwB,EAAEC,KAAK,EAA6B;IAE5D,wBAAwB,EAAEA,KAAK,EAAkB;IAEjD,4BAA4B,EAAEA,KAAK,EAAqB;IAExD,eAAe,EAAEA,KAAK,EAA0C;IAEhE,eAAe,EAAED,UAAU,EAAE;IAE7B,eAAe,EAAEA,UAAU,EAAE;IAE7B,mBAAmB,EAAEA,UAAU,EAAE;IAEjC,cAAc,EAAEC,KAAK,EAAqB;IAE1C,cAAc,EAAED,UAAU,EAAE;IAE5B,iBAAiB,EAAEA,UAAU,EAAE;IAE/B;IAEA,yBAAyB,EAAEC,KAAK;;CAEnC,CAAC","names":["createActionGroup","emptyProps","props","QuizActions","source","events"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.actions.ts"],"sourcesContent":["// import { createAction, props } from '@ngrx/store';\n// import { QuizAppEntity } from './quiz-app.models';\n// import { Question } from '../quiz/quiz.interface';\n\n// export const loadQuestions = createAction('[Quiz] Load Questions');\n\n// export const loadQuestionsSuccess = createAction(\n//   '[Quiz] Load Questions Success',\n//   props<{ questions: Question[] }>()\n// );\n\n// export const loadQuestionsFailure = createAction(\n//   '[Quiz] Load Questions Failure',\n//   props<{ error: any }>()\n// );\n// export const setCurrentQuestionIndex = createAction(\n//   '[Quiz] Set Current Question Index',\n//   props<{ index: number }>()\n// );\n\n// export const selectOption = createAction(\n//   '[Quiz] Select Option',\n//   props<{ option: string; isCorrect: boolean }>()\n// );\n\n// export const nextQuestion = createAction('[Quiz] Next Question');\n// export const skipQuestion = createAction('[Quiz] Skip Question');\n// export const previousQuestion = createAction('[Quiz] Previous Question');\n// export const updateScore = createAction(\n//   '[Quiz] Update Score',\n//   props<{ score: number }>()\n// );\n\n// export const restartQuiz = createAction('[Quiz] Restart Quiz');\n\nimport { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Question } from '../quiz/quiz.interface';\n\nexport const QuizActions = createActionGroup({\n  source: 'Quiz',\n  events: {\n    'Load Questions': emptyProps(),\n\n    'Load Questions Success': props<{ questions: Question[] }>(),\n\n    'Load Questions Failure': props<{ error: any }>(),\n\n    'Set Current Question Index': props<{ index: number }>(),\n\n    'Select Option': props<{ option: string; isCorrect: boolean }>(),\n\n    'Next Question': emptyProps(),\n\n    'Skip Question': emptyProps(),\n\n    'Previous Question': emptyProps(),\n\n    'Update Score': props<{ score: number }>(),\n\n    'Restart Quiz': emptyProps(),\n\n    'Load Categories': emptyProps(),\n\n    // 'Load Categories Success': props<{ categories }>(),\n\n    'Load Categories Failure': props<{ error: any }>(),\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}