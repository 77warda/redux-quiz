{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizReduxService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://the-trivia-api.com/v2/questions';\n  }\n  getTriviaQuestion() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Error fetching trivia question:', error);\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function QuizReduxService_Factory(t) {\n    return new (t || QuizReduxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizReduxService,\n    factory: QuizReduxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,UAAU,EAAEC,UAAU,EAAOC,UAAU,QAAQ,MAAM;;;AAM9D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,yCAAyC;EAEnB;EAEvCC,iBAAiB;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAO,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAC1CR,UAAU,CAAES,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAOR,UAAU,CAACQ,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAAC;qBAZUP,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAS,SAAhBT,gBAAgB;IAAAU,YAFf;EAAM","names":["HttpClient","Observable","catchError","throwError","QuizReduxService","constructor","http","getTriviaQuestion","get","apiUrl","pipe","error","console","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/quiz-redux.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, tap, throwError } from 'rxjs';\nimport { Quiz } from './quiz/quiz.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizReduxService {\n  private apiUrl = 'https://the-trivia-api.com/v2/questions';\n\n  constructor(private http: HttpClient) {}\n\n  getTriviaQuestion(): Observable<Quiz> {\n    return this.http.get<Quiz>(this.apiUrl).pipe(\n      catchError((error) => {\n        console.error('Error fetching trivia question:', error);\n        return throwError(error);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}