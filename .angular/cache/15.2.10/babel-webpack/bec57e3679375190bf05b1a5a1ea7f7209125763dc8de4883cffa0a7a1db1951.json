{"ast":null,"code":"import { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport { QuizReduxService } from '../quiz-redux.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../quiz-redux.service\";\nexport class QuizAppEffects {\n  constructor(actions$, triviaService // Inject your trivia service\n  ) {\n    this.actions$ = actions$;\n    this.triviaService = triviaService;\n    this.init$ = createEffect(() => this.actions$.pipe(ofType(QuizAppActions.loadQuestions), switchMap(() => of(QuizAppActions.loadQuestionsSuccess({\n      questions: []\n    }))), catchError(error => {\n      console.error('Error', error);\n      return of(QuizAppActions.loadQuestionsFailure({\n        error\n      }));\n    })));\n  }\n  static #_ = this.ɵfac = function QuizAppEffects_Factory(t) {\n    return new (t || QuizAppEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.QuizReduxService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizAppEffects,\n    factory: QuizAppEffects.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,SAAS,EAAEC,UAAU,EAAEC,EAAE,QAAQ,MAAM;AAChD,OAAO,KAAKC,cAAc,MAAM,oBAAoB;AAEpD,SAASC,gBAAgB,QAAQ,uBAAuB;;;;AAGxD,OAAM,MAAOC,cAAc;EACzBC,YACUC,QAAiB,EACjBC,aAA+B,CAAC;EAAA;IADhC,aAAQ,GAARD,QAAQ;IACR,kBAAa,GAAbC,aAAa;IAEvB,UAAK,GAAGX,YAAY,CAAC,MACnB,IAAI,CAACU,QAAQ,CAACE,IAAI,CAChBV,MAAM,CAACI,cAAc,CAACO,aAAa,CAAC,EACpCV,SAAS,CAAC,MACRE,EAAE,CAACC,cAAc,CAACQ,oBAAoB,CAAC;MAAEC,SAAS,EAAE;IAAE,CAAE,CAAC,CAAC,CAC3D,EACDX,UAAU,CAAEY,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B,OAAOX,EAAE,CAACC,cAAc,CAACY,oBAAoB,CAAC;QAAEF;MAAK,CAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,CACH,CACF;EAZE;EAAC;qBAJOR,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAW,SAAdX,cAAc;EAAA","names":["createEffect","Actions","ofType","switchMap","catchError","of","QuizAppActions","QuizReduxService","QuizAppEffects","constructor","actions$","triviaService","pipe","loadQuestions","loadQuestionsSuccess","questions","error","console","loadQuestionsFailure","factory"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/Angular apps/quiz-app/apps/quiz-redux-app/src/app/+state/quiz-app.effects.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, of } from 'rxjs';\nimport * as QuizAppActions from './quiz-app.actions';\nimport * as QuizAppFeature from './quiz-app.reducer';\nimport { QuizReduxService } from '../quiz-redux.service';\n\n@Injectable()\nexport class QuizAppEffects {\n  constructor(\n    private actions$: Actions,\n    private triviaService: QuizReduxService // Inject your trivia service\n  ) {}\n  init$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(QuizAppActions.loadQuestions),\n      switchMap(() =>\n        of(QuizAppActions.loadQuestionsSuccess({ questions: [] }))\n      ),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(QuizAppActions.loadQuestionsFailure({ error }));\n      })\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}