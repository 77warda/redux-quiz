{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { QuizActions } from './quiz-app.actions';\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\nexport const initialState = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n  selectedOption: '',\n  isOptionSelected: false,\n  selectedOptionClass: '',\n  correctAnswerClass: '',\n  userResponses: [],\n  isFirstQuestion$: false,\n  correctAnswer: ''\n};\nexport const quizAppReducer = createReducer(initialState,\n// on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n//   ...state,\n//   questions,\n// })),\non(QuizActions.loadQuestionsSuccess, (state, {\n  questions\n}) => ({\n  ...state,\n  questions: questions,\n  totalQuestions: questions.length,\n  currentQuestion: questions[state.current_Question_Index].question.text,\n  options: questions[state.current_Question_Index].incorrectAnswers.concat(questions[state.current_Question_Index].correctAnswer).sort(),\n  lastQuestion: questions.length === state.totalQuestions\n})), on(QuizActions.selectOption, (state, {\n  option\n}) => {\n  const userResponses = [...state.userResponses];\n  userResponses[state.current_Question_Index] = option;\n  return {\n    ...state,\n    selectedOption: option,\n    isOptionSelected: true,\n    selectedOptionClass: state.questions[state.current_Question_Index].correctAnswer === option ? 'correct-answer' : 'incorrect-answer',\n    correctAnswerClass: 'correct-answer',\n    userResponses\n  };\n}), on(QuizActions.nextQuestion, state => {\n  const nextIndex = state.current_Question_Index + 1;\n  return {\n    ...state,\n    current_Question_Index: nextIndex,\n    currentQuestion: state.questions[nextIndex]?.question.text,\n    options: state.questions[nextIndex]?.options\n  };\n}), on(QuizActions.skipQuestion, state => {\n  const nextIndex = state.current_Question_Index + 1;\n  return {\n    ...state,\n    current_Question_Index: nextIndex,\n    currentQuestion: state.questions[nextIndex]?.question.text,\n    options: state.questions[nextIndex]?.options\n  };\n}), on(QuizActions.previousQuestion, state => {\n  const newIndex = state.current_Question_Index - 1;\n  // add\n  if (state.current_Question_Index > 1) {\n    const previousQuestionIndex = state.current_Question_Index - 1;\n    const previousQuestion = state.questions[previousQuestionIndex];\n    console.log(previousQuestionIndex);\n    return {\n      ...state,\n      current_Question_Index: state.current_Question_Index - 1,\n      currentQuestion: previousQuestion.question.text,\n      options: state.questions[newIndex]?.options,\n      selectedOption: state.userResponses[previousQuestionIndex] || null\n    };\n  } else {\n    console.log('previous allowed');\n    return {\n      ...state,\n      isFirstQuestion$: true\n    };\n  }\n}), on(QuizActions.updateScore, (state, {\n  score\n}) => {\n  return {\n    ...state,\n    current_score: state.current_score + score\n  };\n}), on(QuizActions.restartQuiz, () => initialState));","map":{"version":3,"mappings":"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","names":["createReducer","on","QuizActions","QUIZ_APP_FEATURE_KEY","initialState","totalQuestions","current_score","total_score","questions","options","currentQuestion","current_Question_Index","selectedOption","isOptionSelected","selectedOptionClass","correctAnswerClass","userResponses","isFirstQuestion$","correctAnswer","quizAppReducer","loadQuestionsSuccess","state","length","question","text","incorrectAnswers","concat","sort","lastQuestion","selectOption","option","nextQuestion","nextIndex","skipQuestion","previousQuestion","newIndex","previousQuestionIndex","console","log","updateScore","score","restartQuiz"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.reducer.ts"],"sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport { QuizActions } from './quiz-app.actions';\nimport { QuizAppEntity } from './quiz-app.models';\nimport { Quiz } from '../quiz/quiz.interface';\n\nexport const QUIZ_APP_FEATURE_KEY = 'quizApp';\n\nexport const initialState: Quiz = {\n  totalQuestions: 0,\n  current_score: 0,\n  total_score: 0,\n  questions: [],\n  options: [],\n  currentQuestion: '',\n  current_Question_Index: 0,\n  selectedOption: '',\n  isOptionSelected: false,\n  selectedOptionClass: '',\n  correctAnswerClass: '',\n  userResponses: [],\n  isFirstQuestion$: false,\n  correctAnswer: '',\n};\n\nexport const quizAppReducer = createReducer(\n  initialState,\n  // on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n  //   ...state,\n  //   questions,\n  // })),\n  on(QuizActions.loadQuestionsSuccess, (state, { questions }) => ({\n    ...state,\n    questions: questions,\n    totalQuestions: questions.length,\n    currentQuestion: questions[state.current_Question_Index].question.text,\n    options: questions[state.current_Question_Index].incorrectAnswers\n      .concat(questions[state.current_Question_Index].correctAnswer)\n      .sort(),\n    lastQuestion: questions.length === state.totalQuestions,\n  })),\n\n  on(QuizActions.selectOption, (state, { option }) => {\n    const userResponses = [...state.userResponses];\n    userResponses[state.current_Question_Index] = option;\n\n    return {\n      ...state,\n      selectedOption: option,\n      isOptionSelected: true,\n      selectedOptionClass:\n        state.questions[state.current_Question_Index].correctAnswer === option\n          ? 'correct-answer'\n          : 'incorrect-answer',\n      correctAnswerClass: 'correct-answer',\n      userResponses,\n    };\n  }),\n\n  on(QuizActions.nextQuestion, (state) => {\n    const nextIndex = state.current_Question_Index + 1;\n\n    return {\n      ...state,\n      current_Question_Index: nextIndex,\n      currentQuestion: state.questions[nextIndex]?.question.text,\n      options: state.questions[nextIndex]?.options,\n    };\n  }),\n  on(QuizActions.skipQuestion, (state) => {\n    const nextIndex = state.current_Question_Index + 1;\n\n    return {\n      ...state,\n      current_Question_Index: nextIndex,\n      currentQuestion: state.questions[nextIndex]?.question.text,\n      options: state.questions[nextIndex]?.options,\n    };\n  }),\n  on(QuizActions.previousQuestion, (state) => {\n    const newIndex = state.current_Question_Index - 1;\n    // add\n    if (state.current_Question_Index > 1) {\n      const previousQuestionIndex = state.current_Question_Index - 1;\n      const previousQuestion = state.questions[previousQuestionIndex];\n      console.log(previousQuestionIndex);\n      return {\n        ...state,\n        current_Question_Index: state.current_Question_Index - 1,\n        currentQuestion: previousQuestion.question.text,\n        options: state.questions[newIndex]?.options,\n        selectedOption: state.userResponses[previousQuestionIndex] || null,\n      };\n    } else {\n      console.log('previous allowed');\n      return { ...state, isFirstQuestion$: true };\n    }\n  }),\n\n  on(QuizActions.updateScore, (state, { score }) => {\n    return { ...state, current_score: state.current_score + score };\n  }),\n\n  on(QuizActions.restartQuiz, () => initialState)\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}