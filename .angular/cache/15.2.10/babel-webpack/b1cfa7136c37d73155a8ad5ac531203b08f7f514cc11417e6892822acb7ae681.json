{"ast":null,"code":"import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { QUIZ_APP_FEATURE_KEY } from './quiz-app.reducer';\n// Get the feature state\nexport const selectQuizState = createFeatureSelector(QUIZ_APP_FEATURE_KEY);\nexport const selectCurrentQuestionNumber = createSelector(selectQuizState, state => state.currentQuestionNumber);\nexport const selectTotalQuestions = createSelector(selectQuizState, state => state.questions.length);\nexport const selectCategories = createSelector(selectQuizState, state => state.categories);\nexport const selectScore = createSelector(selectQuizState, state => state.score);\nexport const selectQuestions = createSelector(selectQuizState, state => state.questions);\nexport const selectCurrentQuestion = createSelector(selectQuestions, selectCurrentQuestionNumber, (questions, currentQuestionNumber) => {\n  console.log('hi', questions);\n  console.log('currentQuestionNumber:', currentQuestionNumber);\n  const adjustedIndex = currentQuestionNumber - 1;\n  return {\n    ...questions[adjustedIndex],\n    options: questions[adjustedIndex]?.incorrectAnswers.concat(questions[adjustedIndex]?.correctAnswer).sort() || []\n  };\n});\nexport const selectCorrectAnswer = createSelector(selectCurrentQuestion, currentQuestion => {\n  console.log('correct', currentQuestion?.correctAnswer);\n  return currentQuestion?.correctAnswer;\n});\nexport const selectSelectedOption = createSelector(selectQuizState, state => {\n  console.log('selected', state.response);\n  return state.response;\n});\nexport const selectUserResponses = createSelector(selectQuizState, state => {\n  console.log('Responses saved as', state.userResponses);\n  return state.userResponses;\n});","map":{"version":3,"mappings":"AAAA,SAASA,cAAc,EAAEC,qBAAqB,QAAQ,aAAa;AACnE,SAASC,oBAAoB,QAAQ,oBAAoB;AAGzD;AACA,OAAO,MAAMC,eAAe,GAC1BF,qBAAqB,CAAOC,oBAAoB,CAAC;AAEnD,OAAO,MAAME,2BAA2B,GAAGJ,cAAc,CACvDG,eAAe,EACdE,KAAW,IAAKA,KAAK,CAACC,qBAAqB,CAC7C;AAED,OAAO,MAAMC,oBAAoB,GAAGP,cAAc,CAChDG,eAAe,EACdE,KAAW,IAAKA,KAAK,CAACG,SAAS,CAACC,MAAM,CACxC;AACD,OAAO,MAAMC,gBAAgB,GAAGV,cAAc,CAC5CG,eAAe,EACdE,KAAK,IAAKA,KAAK,CAACM,UAAU,CAC5B;AAED,OAAO,MAAMC,WAAW,GAAGZ,cAAc,CACvCG,eAAe,EACdE,KAAW,IAAKA,KAAK,CAACQ,KAAK,CAC7B;AAED,OAAO,MAAMC,eAAe,GAAGd,cAAc,CAC3CG,eAAe,EACdE,KAAK,IAAKA,KAAK,CAACG,SAAS,CAC3B;AAED,OAAO,MAAMO,qBAAqB,GAAGf,cAAc,CACjDc,eAAe,EACfV,2BAA2B,EAC3B,CAACI,SAAS,EAAEF,qBAAqB,KAAI;EACnCU,OAAO,CAACC,GAAG,CAAC,IAAI,EAAET,SAAS,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEX,qBAAqB,CAAC;EAC5D,MAAMY,aAAa,GAAGZ,qBAAqB,GAAG,CAAC;EAE/C,OAAO;IACL,GAAGE,SAAS,CAACU,aAAa,CAAC;IAC3BC,OAAO,EACLX,SAAS,CAACU,aAAa,CAAC,EAAEE,gBAAgB,CACvCC,MAAM,CAACb,SAAS,CAACU,aAAa,CAAC,EAAEI,aAAa,CAAC,CAC/CC,IAAI,EAAE,IAAI;GAChB;AACH,CAAC,CACF;AAED,OAAO,MAAMC,mBAAmB,GAAGxB,cAAc,CAC/Ce,qBAAqB,EACpBU,eAAe,IAAI;EAClBT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,eAAe,EAAEH,aAAa,CAAC;EACtD,OAAOG,eAAe,EAAEH,aAAa;AACvC,CAAC,CACF;AAED,OAAO,MAAMI,oBAAoB,GAAG1B,cAAc,CAACG,eAAe,EAAGE,KAAK,IAAI;EAC5EW,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,KAAK,CAACsB,QAAQ,CAAC;EACvC,OAAOtB,KAAK,CAACsB,QAAQ;AACvB,CAAC,CAAC;AACF,OAAO,MAAMC,mBAAmB,GAAG5B,cAAc,CAACG,eAAe,EAAGE,KAAK,IAAI;EAC3EW,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,KAAK,CAACwB,aAAa,CAAC;EACtD,OAAOxB,KAAK,CAACwB,aAAa;AAC5B,CAAC,CAAC","names":["createSelector","createFeatureSelector","QUIZ_APP_FEATURE_KEY","selectQuizState","selectCurrentQuestionNumber","state","currentQuestionNumber","selectTotalQuestions","questions","length","selectCategories","categories","selectScore","score","selectQuestions","selectCurrentQuestion","console","log","adjustedIndex","options","incorrectAnswers","concat","correctAnswer","sort","selectCorrectAnswer","currentQuestion","selectSelectedOption","response","selectUserResponses","userResponses"],"sourceRoot":"","sources":["/Users/macbookpro/OneSchool/rxjs/redux-quiz/apps/quiz-redux-app/src/app/+state/quiz-app.selectors.ts"],"sourcesContent":["import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { QUIZ_APP_FEATURE_KEY } from './quiz-app.reducer';\nimport { Quiz } from '../quiz/quiz.interface';\n\n// Get the feature state\nexport const selectQuizState =\n  createFeatureSelector<Quiz>(QUIZ_APP_FEATURE_KEY);\n\nexport const selectCurrentQuestionNumber = createSelector(\n  selectQuizState,\n  (state: Quiz) => state.currentQuestionNumber\n);\n\nexport const selectTotalQuestions = createSelector(\n  selectQuizState,\n  (state: Quiz) => state.questions.length\n);\nexport const selectCategories = createSelector(\n  selectQuizState,\n  (state) => state.categories\n);\n\nexport const selectScore = createSelector(\n  selectQuizState,\n  (state: Quiz) => state.score\n);\n\nexport const selectQuestions = createSelector(\n  selectQuizState,\n  (state) => state.questions\n);\n\nexport const selectCurrentQuestion = createSelector(\n  selectQuestions,\n  selectCurrentQuestionNumber,\n  (questions, currentQuestionNumber) => {\n    console.log('hi', questions);\n    console.log('currentQuestionNumber:', currentQuestionNumber);\n    const adjustedIndex = currentQuestionNumber - 1;\n\n    return {\n      ...questions[adjustedIndex],\n      options:\n        questions[adjustedIndex]?.incorrectAnswers\n          .concat(questions[adjustedIndex]?.correctAnswer)\n          .sort() || [],\n    };\n  }\n);\n\nexport const selectCorrectAnswer = createSelector(\n  selectCurrentQuestion,\n  (currentQuestion) => {\n    console.log('correct', currentQuestion?.correctAnswer);\n    return currentQuestion?.correctAnswer;\n  }\n);\n\nexport const selectSelectedOption = createSelector(selectQuizState, (state) => {\n  console.log('selected', state.response);\n  return state.response;\n});\nexport const selectUserResponses = createSelector(selectQuizState, (state) => {\n  console.log('Responses saved as', state.userResponses);\n  return state.userResponses;\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}